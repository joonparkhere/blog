<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="507px" preserveAspectRatio="none" style="width:2486px;height:507px;background:#FFFFFF;" version="1.1" viewBox="0 0 2486 507" width="2486px" zoomAndPan="magnify"><defs/><g><!--MD5=[0ff585c504005a580397f93db3497d4e]
cluster beacon--><g id="cluster_beacon"><path d="M650.5,124.6885 L741.5,124.6885 A3.75,3.75 0 0 1 744,127.1885 L751,156.2979 L759.5,156.2979 A2.5,2.5 0 0 1 762,158.7979 L762,210.1885 A2.5,2.5 0 0 1 759.5,212.6885 L650.5,212.6885 A2.5,2.5 0 0 1 648,210.1885 L648,127.1885 A2.5,2.5 0 0 1 650.5,124.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="648" x2="751" y1="156.2979" y2="156.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="90" x="652" y="147.1094">beacon</text></g><!--MD5=[3bde983dd405bd6d1b3da471b606eade]
cluster consensus--><g id="cluster_consensus"><path d="M13.5,12.6885 L144.5,12.6885 A3.75,3.75 0 0 1 147,15.1885 L154,44.2979 L621.5,44.2979 A2.5,2.5 0 0 1 624,46.7979 L624,210.1885 A2.5,2.5 0 0 1 621.5,212.6885 L13.5,212.6885 A2.5,2.5 0 0 1 11,210.1885 L11,15.1885 A2.5,2.5 0 0 1 13.5,12.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="11" x2="154" y1="44.2979" y2="44.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="130" x="15" y="35.1094">consensus</text></g><!--MD5=[adbbc1643ae4bd1096179f1285b11bf7]
cluster clique--><g id="cluster_clique"><path d="M1172.5,124.6885 L1249.5,124.6885 A3.75,3.75 0 0 1 1252,127.1885 L1259,156.2979 L2476.5,156.2979 A2.5,2.5 0 0 1 2479,158.7979 L2479,322.1885 A2.5,2.5 0 0 1 2476.5,324.6885 L1172.5,324.6885 A2.5,2.5 0 0 1 1170,322.1885 L1170,127.1885 A2.5,2.5 0 0 1 1172.5,124.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="1170" x2="1259" y1="156.2979" y2="156.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="76" x="1174" y="147.1094">clique</text></g><!--MD5=[56def64d9778acbbed4bcacb69f1a85a]
cluster rpc--><g id="cluster_rpc"><path d="M1936.5,12.6885 L1978.5,12.6885 A3.75,3.75 0 0 1 1981,15.1885 L1988,44.2979 L2139.5,44.2979 A2.5,2.5 0 0 1 2142,46.7979 L2142,98.1885 A2.5,2.5 0 0 1 2139.5,100.6885 L1936.5,100.6885 A2.5,2.5 0 0 1 1934,98.1885 L1934,15.1885 A2.5,2.5 0 0 1 1936.5,12.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="1934" x2="1988" y1="44.2979" y2="44.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="41" x="1938" y="35.1094">rpc</text></g><!--MD5=[a75c9706fef61d8a1ad4d510ae3455e1]
cluster ethash--><g id="cluster_ethash"><path d="M312.5,236.6885 L400.5,236.6885 A3.75,3.75 0 0 1 403,239.1885 L410,268.2979 L1143.5,268.2979 A2.5,2.5 0 0 1 1146,270.7979 L1146,498.1885 A2.5,2.5 0 0 1 1143.5,500.6885 L312.5,500.6885 A2.5,2.5 0 0 1 310,498.1885 L310,239.1885 A2.5,2.5 0 0 1 312.5,236.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="310" x2="410" y1="268.2979" y2="268.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="87" x="314" y="259.1094">ethash</text></g><!--MD5=[857233cdc7018b1e8695fe78ce49561f]
cluster __builtin__--><g id="cluster___builtin__"><path d="M788.5,124.6885 L873.5,124.6885 A3.75,3.75 0 0 1 876,127.1885 L883,156.2979 L883.5,156.2979 A2.5,2.5 0 0 1 886,158.7979 L886,210.1885 A2.5,2.5 0 0 1 883.5,212.6885 L788.5,212.6885 A2.5,2.5 0 0 1 786,210.1885 L786,127.1885 A2.5,2.5 0 0 1 788.5,124.6885 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><line style="stroke:#000000;stroke-width:1.0;" x1="786" x2="883" y1="156.2979" y2="156.2979"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" text-decoration="underline" textLength="84" x="790" y="147.1094">builtin</text></g><!--MD5=[db80e6e19124373e3bbb97397fb2089d]
class beacon.Beacon--><g id="elem_beacon.Beacon"><rect codeLine="3" fill="#FFFFFF" height="28" id="beacon.Beacon" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="81" x="664.5" y="168.6885"/><ellipse cx="677.5" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M681.2813,178.6572 C681.2813,178.2197 681.2656,178.0791 681.1719,177.9229 C681.0313,177.6885 680.75,177.5322 680.4531,177.5322 C680.1094,177.5322 679.9688,177.6729 679.7969,178.0947 C679.2031,177.7197 678.4531,177.5322 677.5781,177.5322 C675.4688,177.5322 673.8906,178.8291 673.8906,180.5479 C673.8906,181.5166 674.4219,182.4229 675.2813,182.9072 C675.8281,183.2197 676.375,183.3916 677.4844,183.5791 C678.6406,183.7822 678.9063,183.8447 679.2656,184.0322 C679.6406,184.2354 679.875,184.5791 679.875,184.9385 C679.875,185.6729 678.8906,186.2197 677.6406,186.2197 C676.5156,186.2197 675.4375,185.7354 675.2656,185.126 C675.1406,184.6572 675.1406,184.6572 675.0156,184.5479 C674.8594,184.3916 674.6406,184.2979 674.4063,184.2979 C674.125,184.2979 673.875,184.4229 673.7031,184.6416 C673.5938,184.8135 673.5469,185.001 673.5469,185.4229 L673.5469,186.5479 C673.5469,187.3135 673.8281,187.6729 674.4219,187.6729 C674.6875,187.6729 674.8125,187.6104 675.0938,187.2666 C675.9375,187.7041 676.8281,187.9229 677.75,187.9229 C680.0781,187.9229 681.6406,186.7354 681.6406,184.9697 C681.6406,184.0791 681.3281,183.3916 680.6406,182.8447 C680.1094,182.4229 679.4688,182.1729 677.9844,181.9072 C676.7188,181.6729 676.625,181.6416 676.2969,181.4697 C675.9219,181.2822 675.6563,180.8916 675.6563,180.5322 C675.6563,179.7979 676.5156,179.2354 677.5781,179.2354 C678.6406,179.2354 679.4531,179.7041 679.6094,180.376 C679.7188,180.9229 679.7188,180.9229 679.8438,181.0635 C679.9844,181.1885 680.2188,181.2979 680.4531,181.2979 C680.7188,181.2979 680.9688,181.1572 681.1406,180.9385 C681.25,180.7666 681.2813,180.626 681.2813,180.1572 L681.2813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="53" x="689.5" y="187.5352">Beacon</text></g><!--MD5=[e3559b9db8a46fa1e228ba997b05ad68]
class consensus.Engine--><g id="elem_consensus.Engine"><rect codeLine="122" fill="#FFFFFF" height="28" id="consensus.Engine" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="77" x="530.5" y="56.6885"/><ellipse cx="543.5" cy="70.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M544.4531,67.4697 L546.1719,67.4697 C546.5625,67.4697 546.75,67.4385 546.875,67.3604 C547.1406,67.2041 547.2813,66.9229 547.2813,66.626 C547.2813,66.3604 547.1719,66.0947 546.9375,65.9229 C546.7656,65.8135 546.625,65.7822 546.1719,65.7822 L541.0313,65.7822 C540.5938,65.7822 540.4688,65.7979 540.3125,65.8916 C540.0625,66.0479 539.9063,66.3447 539.9063,66.626 C539.9063,66.9072 540.0469,67.1572 540.2656,67.3291 C540.4219,67.4385 540.6094,67.4697 541.0313,67.4697 L542.75,67.4697 L542.75,73.9854 L541.0313,73.9854 C540.5938,73.9854 540.4688,74.001 540.3125,74.1104 C540.0625,74.2666 539.9063,74.5479 539.9063,74.8447 C539.9063,75.0947 540.0469,75.3604 540.2656,75.5166 C540.4219,75.6416 540.625,75.6885 541.0313,75.6885 L546.1719,75.6885 C546.9219,75.6885 547.2813,75.4072 547.2813,74.8447 C547.2813,74.5635 547.1719,74.3135 546.9375,74.1416 C546.7656,74.0166 546.625,73.9854 546.1719,73.9854 L544.4531,73.9854 L544.4531,67.4697 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="49" x="555.5" y="75.5352">Engine</text></g><!--MD5=[393b3059bc953b6d80892eb93203e895]
class consensus.ChainHeaderReader--><g id="elem_consensus.ChainHeaderReader"><rect codeLine="109" fill="#FFFFFF" height="28" id="consensus.ChainHeaderReader" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="174" x="321" y="56.6885"/><ellipse cx="334" cy="70.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M334.9531,67.4697 L336.6719,67.4697 C337.0625,67.4697 337.25,67.4385 337.375,67.3604 C337.6406,67.2041 337.7813,66.9229 337.7813,66.626 C337.7813,66.3604 337.6719,66.0947 337.4375,65.9229 C337.2656,65.8135 337.125,65.7822 336.6719,65.7822 L331.5313,65.7822 C331.0938,65.7822 330.9688,65.7979 330.8125,65.8916 C330.5625,66.0479 330.4063,66.3447 330.4063,66.626 C330.4063,66.9072 330.5469,67.1572 330.7656,67.3291 C330.9219,67.4385 331.1094,67.4697 331.5313,67.4697 L333.25,67.4697 L333.25,73.9854 L331.5313,73.9854 C331.0938,73.9854 330.9688,74.001 330.8125,74.1104 C330.5625,74.2666 330.4063,74.5479 330.4063,74.8447 C330.4063,75.0947 330.5469,75.3604 330.7656,75.5166 C330.9219,75.6416 331.125,75.6885 331.5313,75.6885 L336.6719,75.6885 C337.4219,75.6885 337.7813,75.4072 337.7813,74.8447 C337.7813,74.5635 337.6719,74.3135 337.4375,74.1416 C337.2656,74.0166 337.125,73.9854 336.6719,73.9854 L334.9531,73.9854 L334.9531,67.4697 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="146" x="346" y="75.5352">ChainHeaderReader</text></g><!--MD5=[d2ee662d27a27bbdd33d7e890af99865]
class consensus.ChainReader--><g id="elem_consensus.ChainReader"><rect codeLine="118" fill="#FFFFFF" height="28" id="consensus.ChainReader" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="121" x="342.5" y="168.6885"/><ellipse cx="355.5" cy="182.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M356.4531,179.4697 L358.1719,179.4697 C358.5625,179.4697 358.75,179.4385 358.875,179.3604 C359.1406,179.2041 359.2813,178.9229 359.2813,178.626 C359.2813,178.3604 359.1719,178.0947 358.9375,177.9229 C358.7656,177.8135 358.625,177.7822 358.1719,177.7822 L353.0313,177.7822 C352.5938,177.7822 352.4688,177.7979 352.3125,177.8916 C352.0625,178.0479 351.9063,178.3447 351.9063,178.626 C351.9063,178.9072 352.0469,179.1572 352.2656,179.3291 C352.4219,179.4385 352.6094,179.4697 353.0313,179.4697 L354.75,179.4697 L354.75,185.9854 L353.0313,185.9854 C352.5938,185.9854 352.4688,186.001 352.3125,186.1104 C352.0625,186.2666 351.9063,186.5479 351.9063,186.8447 C351.9063,187.0947 352.0469,187.3604 352.2656,187.5166 C352.4219,187.6416 352.625,187.6885 353.0313,187.6885 L358.1719,187.6885 C358.9219,187.6885 359.2813,187.4072 359.2813,186.8447 C359.2813,186.5635 359.1719,186.3135 358.9375,186.1416 C358.7656,186.0166 358.625,185.9854 358.1719,185.9854 L356.4531,185.9854 L356.4531,179.4697 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="93" x="367.5" y="187.5352">ChainReader</text></g><!--MD5=[9c0a28eac2bc571566bf01813584d332]
class consensus.Merger--><g id="elem_consensus.Merger"><rect codeLine="137" fill="#FFFFFF" height="28" id="consensus.Merger" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="79" x="206.5" y="56.6885"/><ellipse cx="219.5" cy="70.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M223.2813,66.6572 C223.2813,66.2197 223.2656,66.0791 223.1719,65.9229 C223.0313,65.6885 222.75,65.5322 222.4531,65.5322 C222.1094,65.5322 221.9688,65.6729 221.7969,66.0947 C221.2031,65.7197 220.4531,65.5322 219.5781,65.5322 C217.4688,65.5322 215.8906,66.8291 215.8906,68.5479 C215.8906,69.5166 216.4219,70.4229 217.2813,70.9072 C217.8281,71.2197 218.375,71.3916 219.4844,71.5791 C220.6406,71.7822 220.9063,71.8447 221.2656,72.0322 C221.6406,72.2354 221.875,72.5791 221.875,72.9385 C221.875,73.6729 220.8906,74.2197 219.6406,74.2197 C218.5156,74.2197 217.4375,73.7354 217.2656,73.126 C217.1406,72.6572 217.1406,72.6572 217.0156,72.5479 C216.8594,72.3916 216.6406,72.2979 216.4063,72.2979 C216.125,72.2979 215.875,72.4229 215.7031,72.6416 C215.5938,72.8135 215.5469,73.001 215.5469,73.4229 L215.5469,74.5479 C215.5469,75.3135 215.8281,75.6729 216.4219,75.6729 C216.6875,75.6729 216.8125,75.6104 217.0938,75.2666 C217.9375,75.7041 218.8281,75.9229 219.75,75.9229 C222.0781,75.9229 223.6406,74.7354 223.6406,72.9697 C223.6406,72.0791 223.3281,71.3916 222.6406,70.8447 C222.1094,70.4229 221.4688,70.1729 219.9844,69.9072 C218.7188,69.6729 218.625,69.6416 218.2969,69.4697 C217.9219,69.2822 217.6563,68.8916 217.6563,68.5322 C217.6563,67.7979 218.5156,67.2354 219.5781,67.2354 C220.6406,67.2354 221.4531,67.7041 221.6094,68.376 C221.7188,68.9229 221.7188,68.9229 221.8438,69.0635 C221.9844,69.1885 222.2188,69.2979 222.4531,69.2979 C222.7188,69.2979 222.9688,69.1572 223.1406,68.9385 C223.25,68.7666 223.2813,68.626 223.2813,68.1572 L223.2813,66.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="51" x="231.5" y="75.5352">Merger</text></g><!--MD5=[f3f21b35ecd0eba25882bf929c9a5283]
class consensus.PoW--><g id="elem_consensus.PoW"><rect codeLine="144" fill="#FFFFFF" height="28" id="consensus.PoW" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="59" x="498.5" y="168.6885"/><ellipse cx="511.5" cy="182.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M512.4531,179.4697 L514.1719,179.4697 C514.5625,179.4697 514.75,179.4385 514.875,179.3604 C515.1406,179.2041 515.2813,178.9229 515.2813,178.626 C515.2813,178.3604 515.1719,178.0947 514.9375,177.9229 C514.7656,177.8135 514.625,177.7822 514.1719,177.7822 L509.0313,177.7822 C508.5938,177.7822 508.4688,177.7979 508.3125,177.8916 C508.0625,178.0479 507.9063,178.3447 507.9063,178.626 C507.9063,178.9072 508.0469,179.1572 508.2656,179.3291 C508.4219,179.4385 508.6094,179.4697 509.0313,179.4697 L510.75,179.4697 L510.75,185.9854 L509.0313,185.9854 C508.5938,185.9854 508.4688,186.001 508.3125,186.1104 C508.0625,186.2666 507.9063,186.5479 507.9063,186.8447 C507.9063,187.0947 508.0469,187.3604 508.2656,187.5166 C508.4219,187.6416 508.625,187.6885 509.0313,187.6885 L514.1719,187.6885 C514.9219,187.6885 515.2813,187.4072 515.2813,186.8447 C515.2813,186.5635 515.1719,186.3135 514.9375,186.1416 C514.7656,186.0166 514.625,185.9854 514.1719,185.9854 L512.4531,185.9854 L512.4531,179.4697 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="31" x="523.5" y="187.5352">PoW</text></g><!--MD5=[1d4f41678e8d1043f8170e410c0561d8]
class consensus.transitionStatus--><g id="elem_consensus.transitionStatus"><rect codeLine="148" fill="#FFFFFF" height="28" id="consensus.transitionStatus" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="144" x="27" y="56.6885"/><ellipse cx="40" cy="70.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M43.7813,66.6572 C43.7813,66.2197 43.7656,66.0791 43.6719,65.9229 C43.5313,65.6885 43.25,65.5322 42.9531,65.5322 C42.6094,65.5322 42.4688,65.6729 42.2969,66.0947 C41.7031,65.7197 40.9531,65.5322 40.0781,65.5322 C37.9688,65.5322 36.3906,66.8291 36.3906,68.5479 C36.3906,69.5166 36.9219,70.4229 37.7813,70.9072 C38.3281,71.2197 38.875,71.3916 39.9844,71.5791 C41.1406,71.7822 41.4063,71.8447 41.7656,72.0322 C42.1406,72.2354 42.375,72.5791 42.375,72.9385 C42.375,73.6729 41.3906,74.2197 40.1406,74.2197 C39.0156,74.2197 37.9375,73.7354 37.7656,73.126 C37.6406,72.6572 37.6406,72.6572 37.5156,72.5479 C37.3594,72.3916 37.1406,72.2979 36.9063,72.2979 C36.625,72.2979 36.375,72.4229 36.2031,72.6416 C36.0938,72.8135 36.0469,73.001 36.0469,73.4229 L36.0469,74.5479 C36.0469,75.3135 36.3281,75.6729 36.9219,75.6729 C37.1875,75.6729 37.3125,75.6104 37.5938,75.2666 C38.4375,75.7041 39.3281,75.9229 40.25,75.9229 C42.5781,75.9229 44.1406,74.7354 44.1406,72.9697 C44.1406,72.0791 43.8281,71.3916 43.1406,70.8447 C42.6094,70.4229 41.9688,70.1729 40.4844,69.9072 C39.2188,69.6729 39.125,69.6416 38.7969,69.4697 C38.4219,69.2822 38.1563,68.8916 38.1563,68.5322 C38.1563,67.7979 39.0156,67.2354 40.0781,67.2354 C41.1406,67.2354 41.9531,67.7041 42.1094,68.376 C42.2188,68.9229 42.2188,68.9229 42.3438,69.0635 C42.4844,69.1885 42.7188,69.2979 42.9531,69.2979 C43.2188,69.2979 43.4688,69.1572 43.6406,68.9385 C43.75,68.7666 43.7813,68.626 43.7813,68.1572 L43.7813,66.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="116" x="52" y="75.5352">transitionStatus</text></g><!--MD5=[73039acc6be051e19a9c927f694fce5d]
class clique.API--><g id="elem_clique.API"><rect codeLine="26" fill="#FFFFFF" height="28" id="clique.API" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="51" x="2183.5" y="168.6885"/><ellipse cx="2196.5" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M2200.2813,178.6572 C2200.2813,178.2197 2200.2656,178.0791 2200.1719,177.9229 C2200.0313,177.6885 2199.75,177.5322 2199.4531,177.5322 C2199.1094,177.5322 2198.9688,177.6729 2198.7969,178.0947 C2198.2031,177.7197 2197.4531,177.5322 2196.5781,177.5322 C2194.4688,177.5322 2192.8906,178.8291 2192.8906,180.5479 C2192.8906,181.5166 2193.4219,182.4229 2194.2813,182.9072 C2194.8281,183.2197 2195.375,183.3916 2196.4844,183.5791 C2197.6406,183.7822 2197.9063,183.8447 2198.2656,184.0322 C2198.6406,184.2354 2198.875,184.5791 2198.875,184.9385 C2198.875,185.6729 2197.8906,186.2197 2196.6406,186.2197 C2195.5156,186.2197 2194.4375,185.7354 2194.2656,185.126 C2194.1406,184.6572 2194.1406,184.6572 2194.0156,184.5479 C2193.8594,184.3916 2193.6406,184.2979 2193.4063,184.2979 C2193.125,184.2979 2192.875,184.4229 2192.7031,184.6416 C2192.5938,184.8135 2192.5469,185.001 2192.5469,185.4229 L2192.5469,186.5479 C2192.5469,187.3135 2192.8281,187.6729 2193.4219,187.6729 C2193.6875,187.6729 2193.8125,187.6104 2194.0938,187.2666 C2194.9375,187.7041 2195.8281,187.9229 2196.75,187.9229 C2199.0781,187.9229 2200.6406,186.7354 2200.6406,184.9697 C2200.6406,184.0791 2200.3281,183.3916 2199.6406,182.8447 C2199.1094,182.4229 2198.4688,182.1729 2196.9844,181.9072 C2195.7188,181.6729 2195.625,181.6416 2195.2969,181.4697 C2194.9219,181.2822 2194.6563,180.8916 2194.6563,180.5322 C2194.6563,179.7979 2195.5156,179.2354 2196.5781,179.2354 C2197.6406,179.2354 2198.4531,179.7041 2198.6094,180.376 C2198.7188,180.9229 2198.7188,180.9229 2198.8438,181.0635 C2198.9844,181.1885 2199.2188,181.2979 2199.4531,181.2979 C2199.7188,181.2979 2199.9688,181.1572 2200.1406,180.9385 C2200.25,180.7666 2200.2813,180.626 2200.2813,180.1572 L2200.2813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="23" x="2208.5" y="187.5352">API</text></g><!--MD5=[015b2934e35b3c1ad152333d928e80e1]
class clique.Clique--><g id="elem_clique.Clique"><rect codeLine="38" fill="#FFFFFF" height="28" id="clique.Clique" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="72" x="1821" y="168.6885"/><ellipse cx="1834" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1837.7813,178.6572 C1837.7813,178.2197 1837.7656,178.0791 1837.6719,177.9229 C1837.5313,177.6885 1837.25,177.5322 1836.9531,177.5322 C1836.6094,177.5322 1836.4688,177.6729 1836.2969,178.0947 C1835.7031,177.7197 1834.9531,177.5322 1834.0781,177.5322 C1831.9688,177.5322 1830.3906,178.8291 1830.3906,180.5479 C1830.3906,181.5166 1830.9219,182.4229 1831.7813,182.9072 C1832.3281,183.2197 1832.875,183.3916 1833.9844,183.5791 C1835.1406,183.7822 1835.4063,183.8447 1835.7656,184.0322 C1836.1406,184.2354 1836.375,184.5791 1836.375,184.9385 C1836.375,185.6729 1835.3906,186.2197 1834.1406,186.2197 C1833.0156,186.2197 1831.9375,185.7354 1831.7656,185.126 C1831.6406,184.6572 1831.6406,184.6572 1831.5156,184.5479 C1831.3594,184.3916 1831.1406,184.2979 1830.9063,184.2979 C1830.625,184.2979 1830.375,184.4229 1830.2031,184.6416 C1830.0938,184.8135 1830.0469,185.001 1830.0469,185.4229 L1830.0469,186.5479 C1830.0469,187.3135 1830.3281,187.6729 1830.9219,187.6729 C1831.1875,187.6729 1831.3125,187.6104 1831.5938,187.2666 C1832.4375,187.7041 1833.3281,187.9229 1834.25,187.9229 C1836.5781,187.9229 1838.1406,186.7354 1838.1406,184.9697 C1838.1406,184.0791 1837.8281,183.3916 1837.1406,182.8447 C1836.6094,182.4229 1835.9688,182.1729 1834.4844,181.9072 C1833.2188,181.6729 1833.125,181.6416 1832.7969,181.4697 C1832.4219,181.2822 1832.1563,180.8916 1832.1563,180.5322 C1832.1563,179.7979 1833.0156,179.2354 1834.0781,179.2354 C1835.1406,179.2354 1835.9531,179.7041 1836.1094,180.376 C1836.2188,180.9229 1836.2188,180.9229 1836.3438,181.0635 C1836.4844,181.1885 1836.7188,181.2979 1836.9531,181.2979 C1837.2188,181.2979 1837.4688,181.1572 1837.6406,180.9385 C1837.75,180.7666 1837.7813,180.626 1837.7813,180.1572 L1837.7813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="44" x="1846" y="187.5352">Clique</text></g><!--MD5=[a3084595b2f26f943d6ec808f07b1797]
class clique.Snapshot--><g id="elem_clique.Snapshot"><rect codeLine="54" fill="#FFFFFF" height="28" id="clique.Snapshot" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="96" x="2270" y="168.6885"/><ellipse cx="2283" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M2286.7813,178.6572 C2286.7813,178.2197 2286.7656,178.0791 2286.6719,177.9229 C2286.5313,177.6885 2286.25,177.5322 2285.9531,177.5322 C2285.6094,177.5322 2285.4688,177.6729 2285.2969,178.0947 C2284.7031,177.7197 2283.9531,177.5322 2283.0781,177.5322 C2280.9688,177.5322 2279.3906,178.8291 2279.3906,180.5479 C2279.3906,181.5166 2279.9219,182.4229 2280.7813,182.9072 C2281.3281,183.2197 2281.875,183.3916 2282.9844,183.5791 C2284.1406,183.7822 2284.4063,183.8447 2284.7656,184.0322 C2285.1406,184.2354 2285.375,184.5791 2285.375,184.9385 C2285.375,185.6729 2284.3906,186.2197 2283.1406,186.2197 C2282.0156,186.2197 2280.9375,185.7354 2280.7656,185.126 C2280.6406,184.6572 2280.6406,184.6572 2280.5156,184.5479 C2280.3594,184.3916 2280.1406,184.2979 2279.9063,184.2979 C2279.625,184.2979 2279.375,184.4229 2279.2031,184.6416 C2279.0938,184.8135 2279.0469,185.001 2279.0469,185.4229 L2279.0469,186.5479 C2279.0469,187.3135 2279.3281,187.6729 2279.9219,187.6729 C2280.1875,187.6729 2280.3125,187.6104 2280.5938,187.2666 C2281.4375,187.7041 2282.3281,187.9229 2283.25,187.9229 C2285.5781,187.9229 2287.1406,186.7354 2287.1406,184.9697 C2287.1406,184.0791 2286.8281,183.3916 2286.1406,182.8447 C2285.6094,182.4229 2284.9688,182.1729 2283.4844,181.9072 C2282.2188,181.6729 2282.125,181.6416 2281.7969,181.4697 C2281.4219,181.2822 2281.1563,180.8916 2281.1563,180.5322 C2281.1563,179.7979 2282.0156,179.2354 2283.0781,179.2354 C2284.1406,179.2354 2284.9531,179.7041 2285.1094,180.376 C2285.2188,180.9229 2285.2188,180.9229 2285.3438,181.0635 C2285.4844,181.1885 2285.7188,181.2979 2285.9531,181.2979 C2286.2188,181.2979 2286.4688,181.1572 2286.6406,180.9385 C2286.75,180.7666 2286.7813,180.626 2286.7813,180.1572 L2286.7813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="68" x="2295" y="187.5352">Snapshot</text></g><!--MD5=[4833e9e5d25288723ada15af688ccc5c]
class clique.Tally--><g id="elem_clique.Tally"><rect codeLine="63" fill="#FFFFFF" height="28" id="clique.Tally" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="61" x="2401.5" y="168.6885"/><ellipse cx="2414.5" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M2418.2813,178.6572 C2418.2813,178.2197 2418.2656,178.0791 2418.1719,177.9229 C2418.0313,177.6885 2417.75,177.5322 2417.4531,177.5322 C2417.1094,177.5322 2416.9688,177.6729 2416.7969,178.0947 C2416.2031,177.7197 2415.4531,177.5322 2414.5781,177.5322 C2412.4688,177.5322 2410.8906,178.8291 2410.8906,180.5479 C2410.8906,181.5166 2411.4219,182.4229 2412.2813,182.9072 C2412.8281,183.2197 2413.375,183.3916 2414.4844,183.5791 C2415.6406,183.7822 2415.9063,183.8447 2416.2656,184.0322 C2416.6406,184.2354 2416.875,184.5791 2416.875,184.9385 C2416.875,185.6729 2415.8906,186.2197 2414.6406,186.2197 C2413.5156,186.2197 2412.4375,185.7354 2412.2656,185.126 C2412.1406,184.6572 2412.1406,184.6572 2412.0156,184.5479 C2411.8594,184.3916 2411.6406,184.2979 2411.4063,184.2979 C2411.125,184.2979 2410.875,184.4229 2410.7031,184.6416 C2410.5938,184.8135 2410.5469,185.001 2410.5469,185.4229 L2410.5469,186.5479 C2410.5469,187.3135 2410.8281,187.6729 2411.4219,187.6729 C2411.6875,187.6729 2411.8125,187.6104 2412.0938,187.2666 C2412.9375,187.7041 2413.8281,187.9229 2414.75,187.9229 C2417.0781,187.9229 2418.6406,186.7354 2418.6406,184.9697 C2418.6406,184.0791 2418.3281,183.3916 2417.6406,182.8447 C2417.1094,182.4229 2416.4688,182.1729 2414.9844,181.9072 C2413.7188,181.6729 2413.625,181.6416 2413.2969,181.4697 C2412.9219,181.2822 2412.6563,180.8916 2412.6563,180.5322 C2412.6563,179.7979 2413.5156,179.2354 2414.5781,179.2354 C2415.6406,179.2354 2416.4531,179.7041 2416.6094,180.376 C2416.7188,180.9229 2416.7188,180.9229 2416.8438,181.0635 C2416.9844,181.1885 2417.2188,181.2979 2417.4531,181.2979 C2417.7188,181.2979 2417.9688,181.1572 2418.1406,180.9385 C2418.25,180.7666 2418.2813,180.626 2418.2813,180.1572 L2418.2813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="33" x="2426.5" y="187.5352">Tally</text></g><!--MD5=[45400f9d18dba83083d54b14aa44737c]
class clique.Vote--><g id="elem_clique.Vote"><rect codeLine="68" fill="#FFFFFF" height="28" id="clique.Vote" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="63" x="2177.5" y="280.6885"/><ellipse cx="2190.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M2194.2813,290.6572 C2194.2813,290.2197 2194.2656,290.0791 2194.1719,289.9229 C2194.0313,289.6885 2193.75,289.5322 2193.4531,289.5322 C2193.1094,289.5322 2192.9688,289.6729 2192.7969,290.0947 C2192.2031,289.7197 2191.4531,289.5322 2190.5781,289.5322 C2188.4688,289.5322 2186.8906,290.8291 2186.8906,292.5479 C2186.8906,293.5166 2187.4219,294.4229 2188.2813,294.9072 C2188.8281,295.2197 2189.375,295.3916 2190.4844,295.5791 C2191.6406,295.7822 2191.9063,295.8447 2192.2656,296.0322 C2192.6406,296.2354 2192.875,296.5791 2192.875,296.9385 C2192.875,297.6729 2191.8906,298.2197 2190.6406,298.2197 C2189.5156,298.2197 2188.4375,297.7354 2188.2656,297.126 C2188.1406,296.6572 2188.1406,296.6572 2188.0156,296.5479 C2187.8594,296.3916 2187.6406,296.2979 2187.4063,296.2979 C2187.125,296.2979 2186.875,296.4229 2186.7031,296.6416 C2186.5938,296.8135 2186.5469,297.001 2186.5469,297.4229 L2186.5469,298.5479 C2186.5469,299.3135 2186.8281,299.6729 2187.4219,299.6729 C2187.6875,299.6729 2187.8125,299.6104 2188.0938,299.2666 C2188.9375,299.7041 2189.8281,299.9229 2190.75,299.9229 C2193.0781,299.9229 2194.6406,298.7354 2194.6406,296.9697 C2194.6406,296.0791 2194.3281,295.3916 2193.6406,294.8447 C2193.1094,294.4229 2192.4688,294.1729 2190.9844,293.9072 C2189.7188,293.6729 2189.625,293.6416 2189.2969,293.4697 C2188.9219,293.2822 2188.6563,292.8916 2188.6563,292.5322 C2188.6563,291.7979 2189.5156,291.2354 2190.5781,291.2354 C2191.6406,291.2354 2192.4531,291.7041 2192.6094,292.376 C2192.7188,292.9229 2192.7188,292.9229 2192.8438,293.0635 C2192.9844,293.1885 2193.2188,293.2979 2193.4531,293.2979 C2193.7188,293.2979 2193.9688,293.1572 2194.1406,292.9385 C2194.25,292.7666 2194.2813,292.626 2194.2813,292.1572 L2194.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="35" x="2202.5" y="299.5352">Vote</text></g><!--MD5=[08494b067583c4d9c7aabe197cf695c6]
class clique.blockNumberOrHashOrRLP--><g id="elem_clique.blockNumberOrHashOrRLP"><rect codeLine="75" fill="#FFFFFF" height="28" id="clique.blockNumberOrHashOrRLP" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="220" x="1928" y="168.6885"/><ellipse cx="1941" cy="182.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1944.7813,178.6572 C1944.7813,178.2197 1944.7656,178.0791 1944.6719,177.9229 C1944.5313,177.6885 1944.25,177.5322 1943.9531,177.5322 C1943.6094,177.5322 1943.4688,177.6729 1943.2969,178.0947 C1942.7031,177.7197 1941.9531,177.5322 1941.0781,177.5322 C1938.9688,177.5322 1937.3906,178.8291 1937.3906,180.5479 C1937.3906,181.5166 1937.9219,182.4229 1938.7813,182.9072 C1939.3281,183.2197 1939.875,183.3916 1940.9844,183.5791 C1942.1406,183.7822 1942.4063,183.8447 1942.7656,184.0322 C1943.1406,184.2354 1943.375,184.5791 1943.375,184.9385 C1943.375,185.6729 1942.3906,186.2197 1941.1406,186.2197 C1940.0156,186.2197 1938.9375,185.7354 1938.7656,185.126 C1938.6406,184.6572 1938.6406,184.6572 1938.5156,184.5479 C1938.3594,184.3916 1938.1406,184.2979 1937.9063,184.2979 C1937.625,184.2979 1937.375,184.4229 1937.2031,184.6416 C1937.0938,184.8135 1937.0469,185.001 1937.0469,185.4229 L1937.0469,186.5479 C1937.0469,187.3135 1937.3281,187.6729 1937.9219,187.6729 C1938.1875,187.6729 1938.3125,187.6104 1938.5938,187.2666 C1939.4375,187.7041 1940.3281,187.9229 1941.25,187.9229 C1943.5781,187.9229 1945.1406,186.7354 1945.1406,184.9697 C1945.1406,184.0791 1944.8281,183.3916 1944.1406,182.8447 C1943.6094,182.4229 1942.9688,182.1729 1941.4844,181.9072 C1940.2188,181.6729 1940.125,181.6416 1939.7969,181.4697 C1939.4219,181.2822 1939.1563,180.8916 1939.1563,180.5322 C1939.1563,179.7979 1940.0156,179.2354 1941.0781,179.2354 C1942.1406,179.2354 1942.9531,179.7041 1943.1094,180.376 C1943.2188,180.9229 1943.2188,180.9229 1943.3438,181.0635 C1943.4844,181.1885 1943.7188,181.2979 1943.9531,181.2979 C1944.2188,181.2979 1944.4688,181.1572 1944.6406,180.9385 C1944.75,180.7666 1944.7813,180.626 1944.7813,180.1572 L1944.7813,178.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="192" x="1953" y="187.5352">blockNumberOrHashOrRLP</text></g><!--MD5=[910307a3ae615a69c4312be7143e69e6]
class clique.SignerFn--><g id="elem_clique.SignerFn"><rect codeLine="81" fill="#FFFFFF" height="28" id="clique.SignerFn" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="91" x="1341.5" y="280.6885"/><ellipse cx="1354.5" cy="294.6885" fill="#FF7700" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1354.9375,292.2197 L1356.7813,292.2197 L1356.7813,293.8135 C1356.7813,294.2041 1356.8125,294.376 1356.9063,294.5166 C1357.0625,294.7666 1357.3438,294.9229 1357.6406,294.9229 C1357.9063,294.9229 1358.1563,294.7979 1358.3281,294.5791 C1358.4688,294.4072 1358.4844,294.2822 1358.4844,293.8135 L1358.4844,290.5322 L1349.7188,290.5322 L1349.7188,293.8135 C1349.7188,294.2041 1349.75,294.376 1349.8281,294.5166 C1349.9844,294.7822 1350.2813,294.9229 1350.5625,294.9229 C1350.8438,294.9229 1351.0938,294.7979 1351.2656,294.5791 C1351.375,294.4072 1351.4063,294.2666 1351.4063,293.8135 L1351.4063,292.2197 L1353.2344,292.2197 L1353.2344,298.7354 L1352.125,298.7354 C1351.6875,298.7354 1351.5625,298.751 1351.4063,298.8604 C1351.1563,299.0166 1351,299.2979 1351,299.5947 C1351,299.8447 1351.1406,300.1104 1351.3594,300.2666 C1351.5156,300.3916 1351.7344,300.4385 1352.125,300.4385 L1356.0625,300.4385 C1356.3906,300.4385 1356.6563,300.3916 1356.7656,300.3135 C1357.0313,300.1729 1357.1719,299.876 1357.1719,299.5947 C1357.1719,299.3135 1357.0469,299.0635 1356.8125,298.8916 C1356.6563,298.7666 1356.5156,298.7354 1356.0625,298.7354 L1354.9375,298.7354 L1354.9375,292.2197 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="63" x="1366.5" y="299.5352">SignerFn</text></g><!--MD5=[25920969bcdcff36295eff53c133e27f]
class clique.signersAscending--><g id="elem_clique.signersAscending"><rect codeLine="85" fill="#FFFFFF" height="28" id="clique.signersAscending" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="153" x="1627.5" y="280.6885"/><ellipse cx="1640.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1644.2813,290.6572 C1644.2813,290.2197 1644.2656,290.0791 1644.1719,289.9229 C1644.0313,289.6885 1643.75,289.5322 1643.4531,289.5322 C1643.1094,289.5322 1642.9688,289.6729 1642.7969,290.0947 C1642.2031,289.7197 1641.4531,289.5322 1640.5781,289.5322 C1638.4688,289.5322 1636.8906,290.8291 1636.8906,292.5479 C1636.8906,293.5166 1637.4219,294.4229 1638.2813,294.9072 C1638.8281,295.2197 1639.375,295.3916 1640.4844,295.5791 C1641.6406,295.7822 1641.9063,295.8447 1642.2656,296.0322 C1642.6406,296.2354 1642.875,296.5791 1642.875,296.9385 C1642.875,297.6729 1641.8906,298.2197 1640.6406,298.2197 C1639.5156,298.2197 1638.4375,297.7354 1638.2656,297.126 C1638.1406,296.6572 1638.1406,296.6572 1638.0156,296.5479 C1637.8594,296.3916 1637.6406,296.2979 1637.4063,296.2979 C1637.125,296.2979 1636.875,296.4229 1636.7031,296.6416 C1636.5938,296.8135 1636.5469,297.001 1636.5469,297.4229 L1636.5469,298.5479 C1636.5469,299.3135 1636.8281,299.6729 1637.4219,299.6729 C1637.6875,299.6729 1637.8125,299.6104 1638.0938,299.2666 C1638.9375,299.7041 1639.8281,299.9229 1640.75,299.9229 C1643.0781,299.9229 1644.6406,298.7354 1644.6406,296.9697 C1644.6406,296.0791 1644.3281,295.3916 1643.6406,294.8447 C1643.1094,294.4229 1642.4688,294.1729 1640.9844,293.9072 C1639.7188,293.6729 1639.625,293.6416 1639.2969,293.4697 C1638.9219,293.2822 1638.6563,292.8916 1638.6563,292.5322 C1638.6563,291.7979 1639.5156,291.2354 1640.5781,291.2354 C1641.6406,291.2354 1642.4531,291.7041 1642.6094,292.376 C1642.7188,292.9229 1642.7188,292.9229 1642.8438,293.0635 C1642.9844,293.1885 1643.2188,293.2979 1643.4531,293.2979 C1643.7188,293.2979 1643.9688,293.1572 1644.1406,292.9385 C1644.25,292.7666 1644.2813,292.626 1644.2813,292.1572 L1644.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="125" x="1652.5" y="299.5352">signersAscending</text></g><!--MD5=[68636830b7a1e0ab1e48ee35ecc5d78b]
class clique.status--><g id="elem_clique.status"><rect codeLine="91" fill="#FFFFFF" height="28" id="clique.status" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="72" x="2276" y="280.6885"/><ellipse cx="2289" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M2292.7813,290.6572 C2292.7813,290.2197 2292.7656,290.0791 2292.6719,289.9229 C2292.5313,289.6885 2292.25,289.5322 2291.9531,289.5322 C2291.6094,289.5322 2291.4688,289.6729 2291.2969,290.0947 C2290.7031,289.7197 2289.9531,289.5322 2289.0781,289.5322 C2286.9688,289.5322 2285.3906,290.8291 2285.3906,292.5479 C2285.3906,293.5166 2285.9219,294.4229 2286.7813,294.9072 C2287.3281,295.2197 2287.875,295.3916 2288.9844,295.5791 C2290.1406,295.7822 2290.4063,295.8447 2290.7656,296.0322 C2291.1406,296.2354 2291.375,296.5791 2291.375,296.9385 C2291.375,297.6729 2290.3906,298.2197 2289.1406,298.2197 C2288.0156,298.2197 2286.9375,297.7354 2286.7656,297.126 C2286.6406,296.6572 2286.6406,296.6572 2286.5156,296.5479 C2286.3594,296.3916 2286.1406,296.2979 2285.9063,296.2979 C2285.625,296.2979 2285.375,296.4229 2285.2031,296.6416 C2285.0938,296.8135 2285.0469,297.001 2285.0469,297.4229 L2285.0469,298.5479 C2285.0469,299.3135 2285.3281,299.6729 2285.9219,299.6729 C2286.1875,299.6729 2286.3125,299.6104 2286.5938,299.2666 C2287.4375,299.7041 2288.3281,299.9229 2289.25,299.9229 C2291.5781,299.9229 2293.1406,298.7354 2293.1406,296.9697 C2293.1406,296.0791 2292.8281,295.3916 2292.1406,294.8447 C2291.6094,294.4229 2290.9688,294.1729 2289.4844,293.9072 C2288.2188,293.6729 2288.125,293.6416 2287.7969,293.4697 C2287.4219,293.2822 2287.1563,292.8916 2287.1563,292.5322 C2287.1563,291.7979 2288.0156,291.2354 2289.0781,291.2354 C2290.1406,291.2354 2290.9531,291.7041 2291.1094,292.376 C2291.2188,292.9229 2291.2188,292.9229 2291.3438,293.0635 C2291.4844,293.1885 2291.7188,293.2979 2291.9531,293.2979 C2292.2188,293.2979 2292.4688,293.1572 2292.6406,292.9385 C2292.75,292.7666 2292.7813,292.626 2292.7813,292.1572 L2292.7813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="44" x="2301" y="299.5352">status</text></g><!--MD5=[ff05dfdbf603767f50ccbb62bf8e0bf3]
class clique.commonAddress--><g id="elem_clique.commonAddress"><rect codeLine="97" fill="#FFFFFF" height="28" id="clique.commonAddress" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="163" x="1622.5" y="168.6885"/><ellipse cx="1635.5" cy="182.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1637.8438,178.3604 C1636.9063,177.9229 1636.3125,177.7822 1635.4375,177.7822 C1632.8125,177.7822 1630.8125,179.8604 1630.8125,182.5791 L1630.8125,183.7041 C1630.8125,186.2822 1632.9219,188.1729 1635.8125,188.1729 C1637.0313,188.1729 1638.1875,187.876 1638.9375,187.3291 C1639.5156,186.9229 1639.8438,186.4697 1639.8438,186.0791 C1639.8438,185.626 1639.4531,185.2354 1638.9844,185.2354 C1638.7656,185.2354 1638.5625,185.3135 1638.375,185.501 C1637.9219,185.9854 1637.9219,185.9854 1637.7344,186.0791 C1637.3125,186.3447 1636.625,186.4697 1635.8594,186.4697 C1633.8125,186.4697 1632.5156,185.376 1632.5156,183.6729 L1632.5156,182.5791 C1632.5156,180.7979 1633.7656,179.4854 1635.5,179.4854 C1636.0781,179.4854 1636.6875,179.6416 1637.1563,179.8916 C1637.6406,180.1729 1637.8125,180.3916 1637.9063,180.7979 C1637.9688,181.2041 1638,181.3291 1638.1406,181.4541 C1638.2813,181.5947 1638.5156,181.7041 1638.7344,181.7041 C1639,181.7041 1639.2656,181.5635 1639.4375,181.3447 C1639.5469,181.1885 1639.5781,181.001 1639.5781,180.5791 L1639.5781,179.1572 C1639.5781,178.7197 1639.5625,178.5947 1639.4688,178.4385 C1639.3125,178.1729 1639.0313,178.0322 1638.7344,178.0322 C1638.4375,178.0322 1638.2344,178.126 1638.0156,178.4385 L1637.8438,178.3604 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="135" x="1647.5" y="187.5352">[]common.Address</text></g><!--MD5=[d84a4d985a204d6de2555034796c2d03]
class clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror--><g id="elem_clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror"><rect codeLine="100" fill="#FFFFFF" height="28" id="clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="401" x="1186.5" y="168.6885"/><ellipse cx="1199.5" cy="182.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1201.8438,178.3604 C1200.9063,177.9229 1200.3125,177.7822 1199.4375,177.7822 C1196.8125,177.7822 1194.8125,179.8604 1194.8125,182.5791 L1194.8125,183.7041 C1194.8125,186.2822 1196.9219,188.1729 1199.8125,188.1729 C1201.0313,188.1729 1202.1875,187.876 1202.9375,187.3291 C1203.5156,186.9229 1203.8438,186.4697 1203.8438,186.0791 C1203.8438,185.626 1203.4531,185.2354 1202.9844,185.2354 C1202.7656,185.2354 1202.5625,185.3135 1202.375,185.501 C1201.9219,185.9854 1201.9219,185.9854 1201.7344,186.0791 C1201.3125,186.3447 1200.625,186.4697 1199.8594,186.4697 C1197.8125,186.4697 1196.5156,185.376 1196.5156,183.6729 L1196.5156,182.5791 C1196.5156,180.7979 1197.7656,179.4854 1199.5,179.4854 C1200.0781,179.4854 1200.6875,179.6416 1201.1563,179.8916 C1201.6406,180.1729 1201.8125,180.3916 1201.9063,180.7979 C1201.9688,181.2041 1202,181.3291 1202.1406,181.4541 C1202.2813,181.5947 1202.5156,181.7041 1202.7344,181.7041 C1203,181.7041 1203.2656,181.5635 1203.4375,181.3447 C1203.5469,181.1885 1203.5781,181.001 1203.5781,180.5791 L1203.5781,179.1572 C1203.5781,178.7197 1203.5625,178.5947 1203.4688,178.4385 C1203.3125,178.1729 1203.0313,178.0322 1202.7344,178.0322 C1202.4375,178.0322 1202.2344,178.126 1202.0156,178.4385 L1201.8438,178.3604 Z " fill="#000000"/><text fill="#0000FF" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="31" x="1211.5" y="187.5352">func</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="342" x="1242.5" y="187.5352">(accounts.Account, string, []byte) ([]byte, error)</text></g><!--MD5=[92a1dcd0ccd688381c9dc2d284880fef]
class rpc.BlockNumberOrHash--><g id="elem_rpc.BlockNumberOrHash"><rect fill="#FFFFFF" height="28" id="rpc.BlockNumberOrHash" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="176" x="1950" y="56.6885"/><ellipse cx="1963" cy="70.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1965.3438,66.3604 C1964.4063,65.9229 1963.8125,65.7822 1962.9375,65.7822 C1960.3125,65.7822 1958.3125,67.8604 1958.3125,70.5791 L1958.3125,71.7041 C1958.3125,74.2822 1960.4219,76.1729 1963.3125,76.1729 C1964.5313,76.1729 1965.6875,75.876 1966.4375,75.3291 C1967.0156,74.9229 1967.3438,74.4697 1967.3438,74.0791 C1967.3438,73.626 1966.9531,73.2354 1966.4844,73.2354 C1966.2656,73.2354 1966.0625,73.3135 1965.875,73.501 C1965.4219,73.9854 1965.4219,73.9854 1965.2344,74.0791 C1964.8125,74.3447 1964.125,74.4697 1963.3594,74.4697 C1961.3125,74.4697 1960.0156,73.376 1960.0156,71.6729 L1960.0156,70.5791 C1960.0156,68.7979 1961.2656,67.4854 1963,67.4854 C1963.5781,67.4854 1964.1875,67.6416 1964.6563,67.8916 C1965.1406,68.1729 1965.3125,68.3916 1965.4063,68.7979 C1965.4688,69.2041 1965.5,69.3291 1965.6406,69.4541 C1965.7813,69.5947 1966.0156,69.7041 1966.2344,69.7041 C1966.5,69.7041 1966.7656,69.5635 1966.9375,69.3447 C1967.0469,69.1885 1967.0781,69.001 1967.0781,68.5791 L1967.0781,67.1572 C1967.0781,66.7197 1967.0625,66.5947 1966.9688,66.4385 C1966.8125,66.1729 1966.5313,66.0322 1966.2344,66.0322 C1965.9375,66.0322 1965.7344,66.126 1965.5156,66.4385 L1965.3438,66.3604 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="148" x="1975" y="75.5352">BlockNumberOrHash</text></g><!--MD5=[4a987054d87ca64b0c97b052c9f525c0]
class ethash.API--><g id="elem_ethash.API"><rect codeLine="159" fill="#FFFFFF" height="28" id="ethash.API" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="51" x="744.5" y="280.6885"/><ellipse cx="757.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M761.2813,290.6572 C761.2813,290.2197 761.2656,290.0791 761.1719,289.9229 C761.0313,289.6885 760.75,289.5322 760.4531,289.5322 C760.1094,289.5322 759.9688,289.6729 759.7969,290.0947 C759.2031,289.7197 758.4531,289.5322 757.5781,289.5322 C755.4688,289.5322 753.8906,290.8291 753.8906,292.5479 C753.8906,293.5166 754.4219,294.4229 755.2813,294.9072 C755.8281,295.2197 756.375,295.3916 757.4844,295.5791 C758.6406,295.7822 758.9063,295.8447 759.2656,296.0322 C759.6406,296.2354 759.875,296.5791 759.875,296.9385 C759.875,297.6729 758.8906,298.2197 757.6406,298.2197 C756.5156,298.2197 755.4375,297.7354 755.2656,297.126 C755.1406,296.6572 755.1406,296.6572 755.0156,296.5479 C754.8594,296.3916 754.6406,296.2979 754.4063,296.2979 C754.125,296.2979 753.875,296.4229 753.7031,296.6416 C753.5938,296.8135 753.5469,297.001 753.5469,297.4229 L753.5469,298.5479 C753.5469,299.3135 753.8281,299.6729 754.4219,299.6729 C754.6875,299.6729 754.8125,299.6104 755.0938,299.2666 C755.9375,299.7041 756.8281,299.9229 757.75,299.9229 C760.0781,299.9229 761.6406,298.7354 761.6406,296.9697 C761.6406,296.0791 761.3281,295.3916 760.6406,294.8447 C760.1094,294.4229 759.4688,294.1729 757.9844,293.9072 C756.7188,293.6729 756.625,293.6416 756.2969,293.4697 C755.9219,293.2822 755.6563,292.8916 755.6563,292.5322 C755.6563,291.7979 756.5156,291.2354 757.5781,291.2354 C758.6406,291.2354 759.4531,291.7041 759.6094,292.376 C759.7188,292.9229 759.7188,292.9229 759.8438,293.0635 C759.9844,293.1885 760.2188,293.2979 760.4531,293.2979 C760.7188,293.2979 760.9688,293.1572 761.1406,292.9385 C761.25,292.7666 761.2813,292.626 761.2813,292.1572 L761.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="23" x="769.5" y="299.5352">API</text></g><!--MD5=[3c4deccebed45939ad189ba4ccaa0361]
class ethash.Config--><g id="elem_ethash.Config"><rect codeLine="166" fill="#FFFFFF" height="28" id="ethash.Config" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="75" x="830.5" y="280.6885"/><ellipse cx="843.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M847.2813,290.6572 C847.2813,290.2197 847.2656,290.0791 847.1719,289.9229 C847.0313,289.6885 846.75,289.5322 846.4531,289.5322 C846.1094,289.5322 845.9688,289.6729 845.7969,290.0947 C845.2031,289.7197 844.4531,289.5322 843.5781,289.5322 C841.4688,289.5322 839.8906,290.8291 839.8906,292.5479 C839.8906,293.5166 840.4219,294.4229 841.2813,294.9072 C841.8281,295.2197 842.375,295.3916 843.4844,295.5791 C844.6406,295.7822 844.9063,295.8447 845.2656,296.0322 C845.6406,296.2354 845.875,296.5791 845.875,296.9385 C845.875,297.6729 844.8906,298.2197 843.6406,298.2197 C842.5156,298.2197 841.4375,297.7354 841.2656,297.126 C841.1406,296.6572 841.1406,296.6572 841.0156,296.5479 C840.8594,296.3916 840.6406,296.2979 840.4063,296.2979 C840.125,296.2979 839.875,296.4229 839.7031,296.6416 C839.5938,296.8135 839.5469,297.001 839.5469,297.4229 L839.5469,298.5479 C839.5469,299.3135 839.8281,299.6729 840.4219,299.6729 C840.6875,299.6729 840.8125,299.6104 841.0938,299.2666 C841.9375,299.7041 842.8281,299.9229 843.75,299.9229 C846.0781,299.9229 847.6406,298.7354 847.6406,296.9697 C847.6406,296.0791 847.3281,295.3916 846.6406,294.8447 C846.1094,294.4229 845.4688,294.1729 843.9844,293.9072 C842.7188,293.6729 842.625,293.6416 842.2969,293.4697 C841.9219,293.2822 841.6563,292.8916 841.6563,292.5322 C841.6563,291.7979 842.5156,291.2354 843.5781,291.2354 C844.6406,291.2354 845.4531,291.7041 845.6094,292.376 C845.7188,292.9229 845.7188,292.9229 845.8438,293.0635 C845.9844,293.1885 846.2188,293.2979 846.4531,293.2979 C846.7188,293.2979 846.9688,293.1572 847.1406,292.9385 C847.25,292.7666 847.2813,292.626 847.2813,292.1572 L847.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="47" x="855.5" y="299.5352">Config</text></g><!--MD5=[07d48b8cd1470cfc6918690d539613c0]
class ethash.Ethash--><g id="elem_ethash.Ethash"><rect codeLine="180" fill="#FFFFFF" height="28" id="ethash.Ethash" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="77" x="530.5" y="280.6885"/><ellipse cx="543.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M547.2813,290.6572 C547.2813,290.2197 547.2656,290.0791 547.1719,289.9229 C547.0313,289.6885 546.75,289.5322 546.4531,289.5322 C546.1094,289.5322 545.9688,289.6729 545.7969,290.0947 C545.2031,289.7197 544.4531,289.5322 543.5781,289.5322 C541.4688,289.5322 539.8906,290.8291 539.8906,292.5479 C539.8906,293.5166 540.4219,294.4229 541.2813,294.9072 C541.8281,295.2197 542.375,295.3916 543.4844,295.5791 C544.6406,295.7822 544.9063,295.8447 545.2656,296.0322 C545.6406,296.2354 545.875,296.5791 545.875,296.9385 C545.875,297.6729 544.8906,298.2197 543.6406,298.2197 C542.5156,298.2197 541.4375,297.7354 541.2656,297.126 C541.1406,296.6572 541.1406,296.6572 541.0156,296.5479 C540.8594,296.3916 540.6406,296.2979 540.4063,296.2979 C540.125,296.2979 539.875,296.4229 539.7031,296.6416 C539.5938,296.8135 539.5469,297.001 539.5469,297.4229 L539.5469,298.5479 C539.5469,299.3135 539.8281,299.6729 540.4219,299.6729 C540.6875,299.6729 540.8125,299.6104 541.0938,299.2666 C541.9375,299.7041 542.8281,299.9229 543.75,299.9229 C546.0781,299.9229 547.6406,298.7354 547.6406,296.9697 C547.6406,296.0791 547.3281,295.3916 546.6406,294.8447 C546.1094,294.4229 545.4688,294.1729 543.9844,293.9072 C542.7188,293.6729 542.625,293.6416 542.2969,293.4697 C541.9219,293.2822 541.6563,292.8916 541.6563,292.5322 C541.6563,291.7979 542.5156,291.2354 543.5781,291.2354 C544.6406,291.2354 545.4531,291.7041 545.6094,292.376 C545.7188,292.9229 545.7188,292.9229 545.8438,293.0635 C545.9844,293.1885 546.2188,293.2979 546.4531,293.2979 C546.7188,293.2979 546.9688,293.1572 547.1406,292.9385 C547.25,292.7666 547.2813,292.626 547.2813,292.1572 L547.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="49" x="555.5" y="299.5352">Ethash</text></g><!--MD5=[1bac0c2028496abd1ed8b791926cb099]
class ethash.cache--><g id="elem_ethash.cache"><rect codeLine="199" fill="#FFFFFF" height="28" id="ethash.cache" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="70" x="941" y="280.6885"/><ellipse cx="954" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M957.7813,290.6572 C957.7813,290.2197 957.7656,290.0791 957.6719,289.9229 C957.5313,289.6885 957.25,289.5322 956.9531,289.5322 C956.6094,289.5322 956.4688,289.6729 956.2969,290.0947 C955.7031,289.7197 954.9531,289.5322 954.0781,289.5322 C951.9688,289.5322 950.3906,290.8291 950.3906,292.5479 C950.3906,293.5166 950.9219,294.4229 951.7813,294.9072 C952.3281,295.2197 952.875,295.3916 953.9844,295.5791 C955.1406,295.7822 955.4063,295.8447 955.7656,296.0322 C956.1406,296.2354 956.375,296.5791 956.375,296.9385 C956.375,297.6729 955.3906,298.2197 954.1406,298.2197 C953.0156,298.2197 951.9375,297.7354 951.7656,297.126 C951.6406,296.6572 951.6406,296.6572 951.5156,296.5479 C951.3594,296.3916 951.1406,296.2979 950.9063,296.2979 C950.625,296.2979 950.375,296.4229 950.2031,296.6416 C950.0938,296.8135 950.0469,297.001 950.0469,297.4229 L950.0469,298.5479 C950.0469,299.3135 950.3281,299.6729 950.9219,299.6729 C951.1875,299.6729 951.3125,299.6104 951.5938,299.2666 C952.4375,299.7041 953.3281,299.9229 954.25,299.9229 C956.5781,299.9229 958.1406,298.7354 958.1406,296.9697 C958.1406,296.0791 957.8281,295.3916 957.1406,294.8447 C956.6094,294.4229 955.9688,294.1729 954.4844,293.9072 C953.2188,293.6729 953.125,293.6416 952.7969,293.4697 C952.4219,293.2822 952.1563,292.8916 952.1563,292.5322 C952.1563,291.7979 953.0156,291.2354 954.0781,291.2354 C955.1406,291.2354 955.9531,291.7041 956.1094,292.376 C956.2188,292.9229 956.2188,292.9229 956.3438,293.0635 C956.4844,293.1885 956.7188,293.2979 956.9531,293.2979 C957.2188,293.2979 957.4688,293.1572 957.6406,292.9385 C957.75,292.7666 957.7813,292.626 957.7813,292.1572 L957.7813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="42" x="966" y="299.5352">cache</text></g><!--MD5=[2e615aa18bd06e132226ee82be717503]
class ethash.dataset--><g id="elem_ethash.dataset"><rect codeLine="201" fill="#FFFFFF" height="28" id="ethash.dataset" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="83" x="1046.5" y="280.6885"/><ellipse cx="1059.5" cy="294.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1063.2813,290.6572 C1063.2813,290.2197 1063.2656,290.0791 1063.1719,289.9229 C1063.0313,289.6885 1062.75,289.5322 1062.4531,289.5322 C1062.1094,289.5322 1061.9688,289.6729 1061.7969,290.0947 C1061.2031,289.7197 1060.4531,289.5322 1059.5781,289.5322 C1057.4688,289.5322 1055.8906,290.8291 1055.8906,292.5479 C1055.8906,293.5166 1056.4219,294.4229 1057.2813,294.9072 C1057.8281,295.2197 1058.375,295.3916 1059.4844,295.5791 C1060.6406,295.7822 1060.9063,295.8447 1061.2656,296.0322 C1061.6406,296.2354 1061.875,296.5791 1061.875,296.9385 C1061.875,297.6729 1060.8906,298.2197 1059.6406,298.2197 C1058.5156,298.2197 1057.4375,297.7354 1057.2656,297.126 C1057.1406,296.6572 1057.1406,296.6572 1057.0156,296.5479 C1056.8594,296.3916 1056.6406,296.2979 1056.4063,296.2979 C1056.125,296.2979 1055.875,296.4229 1055.7031,296.6416 C1055.5938,296.8135 1055.5469,297.001 1055.5469,297.4229 L1055.5469,298.5479 C1055.5469,299.3135 1055.8281,299.6729 1056.4219,299.6729 C1056.6875,299.6729 1056.8125,299.6104 1057.0938,299.2666 C1057.9375,299.7041 1058.8281,299.9229 1059.75,299.9229 C1062.0781,299.9229 1063.6406,298.7354 1063.6406,296.9697 C1063.6406,296.0791 1063.3281,295.3916 1062.6406,294.8447 C1062.1094,294.4229 1061.4688,294.1729 1059.9844,293.9072 C1058.7188,293.6729 1058.625,293.6416 1058.2969,293.4697 C1057.9219,293.2822 1057.6563,292.8916 1057.6563,292.5322 C1057.6563,291.7979 1058.5156,291.2354 1059.5781,291.2354 C1060.6406,291.2354 1061.4531,291.7041 1061.6094,292.376 C1061.7188,292.9229 1061.7188,292.9229 1061.8438,293.0635 C1061.9844,293.1885 1062.2188,293.2979 1062.4531,293.2979 C1062.7188,293.2979 1062.9688,293.1572 1063.1406,292.9385 C1063.25,292.7666 1063.2813,292.626 1063.2813,292.1572 L1063.2813,290.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="55" x="1071.5" y="299.5352">dataset</text></g><!--MD5=[05d2ac59968106e111798af8ad5f9dc1]
class ethash.Mode--><g id="elem_ethash.Mode"><rect codeLine="203" fill="#FFFFFF" height="28" id="ethash.Mode" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="67" x="642.5" y="280.6885"/><ellipse cx="655.5" cy="294.6885" fill="#FF7700" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M655.9375,292.2197 L657.7813,292.2197 L657.7813,293.8135 C657.7813,294.2041 657.8125,294.376 657.9063,294.5166 C658.0625,294.7666 658.3438,294.9229 658.6406,294.9229 C658.9063,294.9229 659.1563,294.7979 659.3281,294.5791 C659.4688,294.4072 659.4844,294.2822 659.4844,293.8135 L659.4844,290.5322 L650.7188,290.5322 L650.7188,293.8135 C650.7188,294.2041 650.75,294.376 650.8281,294.5166 C650.9844,294.7822 651.2813,294.9229 651.5625,294.9229 C651.8438,294.9229 652.0938,294.7979 652.2656,294.5791 C652.375,294.4072 652.4063,294.2666 652.4063,293.8135 L652.4063,292.2197 L654.2344,292.2197 L654.2344,298.7354 L653.125,298.7354 C652.6875,298.7354 652.5625,298.751 652.4063,298.8604 C652.1563,299.0166 652,299.2979 652,299.5947 C652,299.8447 652.1406,300.1104 652.3594,300.2666 C652.5156,300.3916 652.7344,300.4385 653.125,300.4385 L657.0625,300.4385 C657.3906,300.4385 657.6563,300.3916 657.7656,300.3135 C658.0313,300.1729 658.1719,299.876 658.1719,299.5947 C658.1719,299.3135 658.0469,299.0635 657.8125,298.8916 C657.6563,298.7666 657.5156,298.7354 657.0625,298.7354 L655.9375,298.7354 L655.9375,292.2197 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="39" x="667.5" y="299.5352">Mode</text></g><!--MD5=[c621317d9e339bbea8ff8bca248743ea]
class ethash.hasher--><g id="elem_ethash.hasher"><rect codeLine="205" fill="#FFFFFF" height="28" id="ethash.hasher" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="76" x="373" y="368.6885"/><ellipse cx="386" cy="382.6885" fill="#FF7700" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M386.4375,380.2197 L388.2813,380.2197 L388.2813,381.8135 C388.2813,382.2041 388.3125,382.376 388.4063,382.5166 C388.5625,382.7666 388.8438,382.9229 389.1406,382.9229 C389.4063,382.9229 389.6563,382.7979 389.8281,382.5791 C389.9688,382.4072 389.9844,382.2822 389.9844,381.8135 L389.9844,378.5322 L381.2188,378.5322 L381.2188,381.8135 C381.2188,382.2041 381.25,382.376 381.3281,382.5166 C381.4844,382.7822 381.7813,382.9229 382.0625,382.9229 C382.3438,382.9229 382.5938,382.7979 382.7656,382.5791 C382.875,382.4072 382.9063,382.2666 382.9063,381.8135 L382.9063,380.2197 L384.7344,380.2197 L384.7344,386.7354 L383.625,386.7354 C383.1875,386.7354 383.0625,386.751 382.9063,386.8604 C382.6563,387.0166 382.5,387.2979 382.5,387.5947 C382.5,387.8447 382.6406,388.1104 382.8594,388.2666 C383.0156,388.3916 383.2344,388.4385 383.625,388.4385 L387.5625,388.4385 C387.8906,388.4385 388.1563,388.3916 388.2656,388.3135 C388.5313,388.1729 388.6719,387.876 388.6719,387.5947 C388.6719,387.3135 388.5469,387.0635 388.3125,386.8916 C388.1563,386.7666 388.0156,386.7354 387.5625,386.7354 L386.4375,386.7354 L386.4375,380.2197 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="48" x="398" y="387.5352">hasher</text></g><!--MD5=[af30fec3736c3b9cddfb32ca3ca510e5]
class ethash.hashrate--><g id="elem_ethash.hashrate"><rect codeLine="207" fill="#FFFFFF" height="28" id="ethash.hashrate" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="91" x="650.5" y="368.6885"/><ellipse cx="663.5" cy="382.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M667.2813,378.6572 C667.2813,378.2197 667.2656,378.0791 667.1719,377.9229 C667.0313,377.6885 666.75,377.5322 666.4531,377.5322 C666.1094,377.5322 665.9688,377.6729 665.7969,378.0947 C665.2031,377.7197 664.4531,377.5322 663.5781,377.5322 C661.4688,377.5322 659.8906,378.8291 659.8906,380.5479 C659.8906,381.5166 660.4219,382.4229 661.2813,382.9072 C661.8281,383.2197 662.375,383.3916 663.4844,383.5791 C664.6406,383.7822 664.9063,383.8447 665.2656,384.0322 C665.6406,384.2354 665.875,384.5791 665.875,384.9385 C665.875,385.6729 664.8906,386.2197 663.6406,386.2197 C662.5156,386.2197 661.4375,385.7354 661.2656,385.126 C661.1406,384.6572 661.1406,384.6572 661.0156,384.5479 C660.8594,384.3916 660.6406,384.2979 660.4063,384.2979 C660.125,384.2979 659.875,384.4229 659.7031,384.6416 C659.5938,384.8135 659.5469,385.001 659.5469,385.4229 L659.5469,386.5479 C659.5469,387.3135 659.8281,387.6729 660.4219,387.6729 C660.6875,387.6729 660.8125,387.6104 661.0938,387.2666 C661.9375,387.7041 662.8281,387.9229 663.75,387.9229 C666.0781,387.9229 667.6406,386.7354 667.6406,384.9697 C667.6406,384.0791 667.3281,383.3916 666.6406,382.8447 C666.1094,382.4229 665.4688,382.1729 663.9844,381.9072 C662.7188,381.6729 662.625,381.6416 662.2969,381.4697 C661.9219,381.2822 661.6563,380.8916 661.6563,380.5322 C661.6563,379.7979 662.5156,379.2354 663.5781,379.2354 C664.6406,379.2354 665.4531,379.7041 665.6094,380.376 C665.7188,380.9229 665.7188,380.9229 665.8438,381.0635 C665.9844,381.1885 666.2188,381.2979 666.4531,381.2979 C666.7188,381.2979 666.9688,381.1572 667.1406,380.9385 C667.25,380.7666 667.2813,380.626 667.2813,380.1572 L667.2813,378.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="63" x="675.5" y="387.5352">hashrate</text></g><!--MD5=[b4be1a11a751eb7d77134bb68ac01551]
class ethash.lru--><g id="elem_ethash.lru"><rect codeLine="209" fill="#FFFFFF" height="28" id="ethash.lru" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="46" x="777" y="368.6885"/><ellipse cx="790" cy="382.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M793.7813,378.6572 C793.7813,378.2197 793.7656,378.0791 793.6719,377.9229 C793.5313,377.6885 793.25,377.5322 792.9531,377.5322 C792.6094,377.5322 792.4688,377.6729 792.2969,378.0947 C791.7031,377.7197 790.9531,377.5322 790.0781,377.5322 C787.9688,377.5322 786.3906,378.8291 786.3906,380.5479 C786.3906,381.5166 786.9219,382.4229 787.7813,382.9072 C788.3281,383.2197 788.875,383.3916 789.9844,383.5791 C791.1406,383.7822 791.4063,383.8447 791.7656,384.0322 C792.1406,384.2354 792.375,384.5791 792.375,384.9385 C792.375,385.6729 791.3906,386.2197 790.1406,386.2197 C789.0156,386.2197 787.9375,385.7354 787.7656,385.126 C787.6406,384.6572 787.6406,384.6572 787.5156,384.5479 C787.3594,384.3916 787.1406,384.2979 786.9063,384.2979 C786.625,384.2979 786.375,384.4229 786.2031,384.6416 C786.0938,384.8135 786.0469,385.001 786.0469,385.4229 L786.0469,386.5479 C786.0469,387.3135 786.3281,387.6729 786.9219,387.6729 C787.1875,387.6729 787.3125,387.6104 787.5938,387.2666 C788.4375,387.7041 789.3281,387.9229 790.25,387.9229 C792.5781,387.9229 794.1406,386.7354 794.1406,384.9697 C794.1406,384.0791 793.8281,383.3916 793.1406,382.8447 C792.6094,382.4229 791.9688,382.1729 790.4844,381.9072 C789.2188,381.6729 789.125,381.6416 788.7969,381.4697 C788.4219,381.2822 788.1563,380.8916 788.1563,380.5322 C788.1563,379.7979 789.0156,379.2354 790.0781,379.2354 C791.1406,379.2354 791.9531,379.7041 792.1094,380.376 C792.2188,380.9229 792.2188,380.9229 792.3438,381.0635 C792.4844,381.1885 792.7188,381.2979 792.9531,381.2979 C793.2188,381.2979 793.4688,381.1572 793.6406,380.9385 C793.75,380.7666 793.7813,380.626 793.7813,380.1572 L793.7813,378.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="18" x="802" y="387.5352">lru</text></g><!--MD5=[43336b2fd7af4938aa37fe5e589118cd]
class ethash.mineResult--><g id="elem_ethash.mineResult"><rect codeLine="211" fill="#FFFFFF" height="28" id="ethash.mineResult" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="109" x="858.5" y="368.6885"/><ellipse cx="871.5" cy="382.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M875.2813,378.6572 C875.2813,378.2197 875.2656,378.0791 875.1719,377.9229 C875.0313,377.6885 874.75,377.5322 874.4531,377.5322 C874.1094,377.5322 873.9688,377.6729 873.7969,378.0947 C873.2031,377.7197 872.4531,377.5322 871.5781,377.5322 C869.4688,377.5322 867.8906,378.8291 867.8906,380.5479 C867.8906,381.5166 868.4219,382.4229 869.2813,382.9072 C869.8281,383.2197 870.375,383.3916 871.4844,383.5791 C872.6406,383.7822 872.9063,383.8447 873.2656,384.0322 C873.6406,384.2354 873.875,384.5791 873.875,384.9385 C873.875,385.6729 872.8906,386.2197 871.6406,386.2197 C870.5156,386.2197 869.4375,385.7354 869.2656,385.126 C869.1406,384.6572 869.1406,384.6572 869.0156,384.5479 C868.8594,384.3916 868.6406,384.2979 868.4063,384.2979 C868.125,384.2979 867.875,384.4229 867.7031,384.6416 C867.5938,384.8135 867.5469,385.001 867.5469,385.4229 L867.5469,386.5479 C867.5469,387.3135 867.8281,387.6729 868.4219,387.6729 C868.6875,387.6729 868.8125,387.6104 869.0938,387.2666 C869.9375,387.7041 870.8281,387.9229 871.75,387.9229 C874.0781,387.9229 875.6406,386.7354 875.6406,384.9697 C875.6406,384.0791 875.3281,383.3916 874.6406,382.8447 C874.1094,382.4229 873.4688,382.1729 871.9844,381.9072 C870.7188,381.6729 870.625,381.6416 870.2969,381.4697 C869.9219,381.2822 869.6563,380.8916 869.6563,380.5322 C869.6563,379.7979 870.5156,379.2354 871.5781,379.2354 C872.6406,379.2354 873.4531,379.7041 873.6094,380.376 C873.7188,380.9229 873.7188,380.9229 873.8438,381.0635 C873.9844,381.1885 874.2188,381.2979 874.4531,381.2979 C874.7188,381.2979 874.9688,381.1572 875.1406,380.9385 C875.25,380.7666 875.2813,380.626 875.2813,380.1572 L875.2813,378.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="81" x="883.5" y="387.5352">mineResult</text></g><!--MD5=[432648313960604c94df52d8a9eabb64]
class ethash.remoteSealer--><g id="elem_ethash.remoteSealer"><rect codeLine="213" fill="#FFFFFF" height="28" id="ethash.remoteSealer" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="127" x="1002.5" y="368.6885"/><ellipse cx="1015.5" cy="382.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M1019.2813,378.6572 C1019.2813,378.2197 1019.2656,378.0791 1019.1719,377.9229 C1019.0313,377.6885 1018.75,377.5322 1018.4531,377.5322 C1018.1094,377.5322 1017.9688,377.6729 1017.7969,378.0947 C1017.2031,377.7197 1016.4531,377.5322 1015.5781,377.5322 C1013.4688,377.5322 1011.8906,378.8291 1011.8906,380.5479 C1011.8906,381.5166 1012.4219,382.4229 1013.2813,382.9072 C1013.8281,383.2197 1014.375,383.3916 1015.4844,383.5791 C1016.6406,383.7822 1016.9063,383.8447 1017.2656,384.0322 C1017.6406,384.2354 1017.875,384.5791 1017.875,384.9385 C1017.875,385.6729 1016.8906,386.2197 1015.6406,386.2197 C1014.5156,386.2197 1013.4375,385.7354 1013.2656,385.126 C1013.1406,384.6572 1013.1406,384.6572 1013.0156,384.5479 C1012.8594,384.3916 1012.6406,384.2979 1012.4063,384.2979 C1012.125,384.2979 1011.875,384.4229 1011.7031,384.6416 C1011.5938,384.8135 1011.5469,385.001 1011.5469,385.4229 L1011.5469,386.5479 C1011.5469,387.3135 1011.8281,387.6729 1012.4219,387.6729 C1012.6875,387.6729 1012.8125,387.6104 1013.0938,387.2666 C1013.9375,387.7041 1014.8281,387.9229 1015.75,387.9229 C1018.0781,387.9229 1019.6406,386.7354 1019.6406,384.9697 C1019.6406,384.0791 1019.3281,383.3916 1018.6406,382.8447 C1018.1094,382.4229 1017.4688,382.1729 1015.9844,381.9072 C1014.7188,381.6729 1014.625,381.6416 1014.2969,381.4697 C1013.9219,381.2822 1013.6563,380.8916 1013.6563,380.5322 C1013.6563,379.7979 1014.5156,379.2354 1015.5781,379.2354 C1016.6406,379.2354 1017.4531,379.7041 1017.6094,380.376 C1017.7188,380.9229 1017.7188,380.9229 1017.8438,381.0635 C1017.9844,381.1885 1018.2188,381.2979 1018.4531,381.2979 C1018.7188,381.2979 1018.9688,381.1572 1019.1406,380.9385 C1019.25,380.7666 1019.2813,380.626 1019.2813,380.1572 L1019.2813,378.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="99" x="1027.5" y="387.5352">remoteSealer</text></g><!--MD5=[4ba1a49a3be1b4531edab1bde455a0f7]
class ethash.sealTask--><g id="elem_ethash.sealTask"><rect codeLine="215" fill="#FFFFFF" height="28" id="ethash.sealTask" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="89" x="651.5" y="456.6885"/><ellipse cx="664.5" cy="470.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M668.2813,466.6572 C668.2813,466.2197 668.2656,466.0791 668.1719,465.9229 C668.0313,465.6885 667.75,465.5322 667.4531,465.5322 C667.1094,465.5322 666.9688,465.6729 666.7969,466.0947 C666.2031,465.7197 665.4531,465.5322 664.5781,465.5322 C662.4688,465.5322 660.8906,466.8291 660.8906,468.5479 C660.8906,469.5166 661.4219,470.4229 662.2813,470.9072 C662.8281,471.2197 663.375,471.3916 664.4844,471.5791 C665.6406,471.7822 665.9063,471.8447 666.2656,472.0322 C666.6406,472.2354 666.875,472.5791 666.875,472.9385 C666.875,473.6729 665.8906,474.2197 664.6406,474.2197 C663.5156,474.2197 662.4375,473.7354 662.2656,473.126 C662.1406,472.6572 662.1406,472.6572 662.0156,472.5479 C661.8594,472.3916 661.6406,472.2979 661.4063,472.2979 C661.125,472.2979 660.875,472.4229 660.7031,472.6416 C660.5938,472.8135 660.5469,473.001 660.5469,473.4229 L660.5469,474.5479 C660.5469,475.3135 660.8281,475.6729 661.4219,475.6729 C661.6875,475.6729 661.8125,475.6104 662.0938,475.2666 C662.9375,475.7041 663.8281,475.9229 664.75,475.9229 C667.0781,475.9229 668.6406,474.7354 668.6406,472.9697 C668.6406,472.0791 668.3281,471.3916 667.6406,470.8447 C667.1094,470.4229 666.4688,470.1729 664.9844,469.9072 C663.7188,469.6729 663.625,469.6416 663.2969,469.4697 C662.9219,469.2822 662.6563,468.8916 662.6563,468.5322 C662.6563,467.7979 663.5156,467.2354 664.5781,467.2354 C665.6406,467.2354 666.4531,467.7041 666.6094,468.376 C666.7188,468.9229 666.7188,468.9229 666.8438,469.0635 C666.9844,469.1885 667.2188,469.2979 667.4531,469.2979 C667.7188,469.2979 667.9688,469.1572 668.1406,468.9385 C668.25,468.7666 668.2813,468.626 668.2813,468.1572 L668.2813,466.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="61" x="676.5" y="475.5352">sealTask</text></g><!--MD5=[3c0b8b350da630675800cc94a412e179]
class ethash.sealWork--><g id="elem_ethash.sealWork"><rect codeLine="217" fill="#FFFFFF" height="28" id="ethash.sealWork" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="94" x="776" y="456.6885"/><ellipse cx="789" cy="470.6885" fill="#7FFFD4" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M792.7813,466.6572 C792.7813,466.2197 792.7656,466.0791 792.6719,465.9229 C792.5313,465.6885 792.25,465.5322 791.9531,465.5322 C791.6094,465.5322 791.4688,465.6729 791.2969,466.0947 C790.7031,465.7197 789.9531,465.5322 789.0781,465.5322 C786.9688,465.5322 785.3906,466.8291 785.3906,468.5479 C785.3906,469.5166 785.9219,470.4229 786.7813,470.9072 C787.3281,471.2197 787.875,471.3916 788.9844,471.5791 C790.1406,471.7822 790.4063,471.8447 790.7656,472.0322 C791.1406,472.2354 791.375,472.5791 791.375,472.9385 C791.375,473.6729 790.3906,474.2197 789.1406,474.2197 C788.0156,474.2197 786.9375,473.7354 786.7656,473.126 C786.6406,472.6572 786.6406,472.6572 786.5156,472.5479 C786.3594,472.3916 786.1406,472.2979 785.9063,472.2979 C785.625,472.2979 785.375,472.4229 785.2031,472.6416 C785.0938,472.8135 785.0469,473.001 785.0469,473.4229 L785.0469,474.5479 C785.0469,475.3135 785.3281,475.6729 785.9219,475.6729 C786.1875,475.6729 786.3125,475.6104 786.5938,475.2666 C787.4375,475.7041 788.3281,475.9229 789.25,475.9229 C791.5781,475.9229 793.1406,474.7354 793.1406,472.9697 C793.1406,472.0791 792.8281,471.3916 792.1406,470.8447 C791.6094,470.4229 790.9688,470.1729 789.4844,469.9072 C788.2188,469.6729 788.125,469.6416 787.7969,469.4697 C787.4219,469.2822 787.1563,468.8916 787.1563,468.5322 C787.1563,467.7979 788.0156,467.2354 789.0781,467.2354 C790.1406,467.2354 790.9531,467.7041 791.1094,468.376 C791.2188,468.9229 791.2188,468.9229 791.3438,469.0635 C791.4844,469.1885 791.7188,469.2979 791.9531,469.2979 C792.2188,469.2979 792.4688,469.1572 792.6406,468.9385 C792.75,468.7666 792.7813,468.626 792.7813,468.1572 L792.7813,466.6572 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="66" x="801" y="475.5352">sealWork</text></g><!--MD5=[59aef72fe0b158f116ee6e91b661e005]
class ethash.<font color=blue>func</font>([]byte, []byte) --><g id="elem_ethash.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) "><rect fill="#FFFFFF" height="28" id="ethash.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) " rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="169" x="326.5" y="280.6885"/><ellipse cx="339.5" cy="294.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M341.8438,290.3604 C340.9063,289.9229 340.3125,289.7822 339.4375,289.7822 C336.8125,289.7822 334.8125,291.8604 334.8125,294.5791 L334.8125,295.7041 C334.8125,298.2822 336.9219,300.1729 339.8125,300.1729 C341.0313,300.1729 342.1875,299.876 342.9375,299.3291 C343.5156,298.9229 343.8438,298.4697 343.8438,298.0791 C343.8438,297.626 343.4531,297.2354 342.9844,297.2354 C342.7656,297.2354 342.5625,297.3135 342.375,297.501 C341.9219,297.9854 341.9219,297.9854 341.7344,298.0791 C341.3125,298.3447 340.625,298.4697 339.8594,298.4697 C337.8125,298.4697 336.5156,297.376 336.5156,295.6729 L336.5156,294.5791 C336.5156,292.7979 337.7656,291.4854 339.5,291.4854 C340.0781,291.4854 340.6875,291.6416 341.1563,291.8916 C341.6406,292.1729 341.8125,292.3916 341.9063,292.7979 C341.9688,293.2041 342,293.3291 342.1406,293.4541 C342.2813,293.5947 342.5156,293.7041 342.7344,293.7041 C343,293.7041 343.2656,293.5635 343.4375,293.3447 C343.5469,293.1885 343.5781,293.001 343.5781,292.5791 L343.5781,291.1572 C343.5781,290.7197 343.5625,290.5947 343.4688,290.4385 C343.3125,290.1729 343.0313,290.0322 342.7344,290.0322 C342.4375,290.0322 342.2344,290.126 342.0156,290.4385 L341.8438,290.3604 Z " fill="#000000"/><text fill="#0000FF" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="31" x="351.5" y="299.5352">func</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="106" x="382.5" y="299.5352">([]byte, []byte)</text></g><!--MD5=[9e15914ee109ba168afb3e5ac8ca9d1e]
class __builtin__.uint--><g id="elem___builtin__.uint"><rect fill="#FFFFFF" height="28" id="__builtin__.uint" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="56" x="802" y="168.6885"/><ellipse cx="815" cy="182.6885" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M817.3438,178.3604 C816.4063,177.9229 815.8125,177.7822 814.9375,177.7822 C812.3125,177.7822 810.3125,179.8604 810.3125,182.5791 L810.3125,183.7041 C810.3125,186.2822 812.4219,188.1729 815.3125,188.1729 C816.5313,188.1729 817.6875,187.876 818.4375,187.3291 C819.0156,186.9229 819.3438,186.4697 819.3438,186.0791 C819.3438,185.626 818.9531,185.2354 818.4844,185.2354 C818.2656,185.2354 818.0625,185.3135 817.875,185.501 C817.4219,185.9854 817.4219,185.9854 817.2344,186.0791 C816.8125,186.3447 816.125,186.4697 815.3594,186.4697 C813.3125,186.4697 812.0156,185.376 812.0156,183.6729 L812.0156,182.5791 C812.0156,180.7979 813.2656,179.4854 815,179.4854 C815.5781,179.4854 816.1875,179.6416 816.6563,179.8916 C817.1406,180.1729 817.3125,180.3916 817.4063,180.7979 C817.4688,181.2041 817.5,181.3291 817.6406,181.4541 C817.7813,181.5947 818.0156,181.7041 818.2344,181.7041 C818.5,181.7041 818.7656,181.5635 818.9375,181.3447 C819.0469,181.1885 819.0781,181.001 819.0781,180.5791 L819.0781,179.1572 C819.0781,178.7197 819.0625,178.5947 818.9688,178.4385 C818.8125,178.1729 818.5313,178.0322 818.2344,178.0322 C817.9375,178.0322 817.7344,178.126 817.5156,178.4385 L817.3438,178.3604 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="28" x="827" y="187.5352">uint</text></g><!--MD5=[117bab87db0db8eb500b8a5a2e7bb82e]
reverse link consensus.Engine to beacon.Beacon--><g id="link_consensus.Engine_beacon.Beacon"><path codeLine="23" d="M601.003,97.5735 C628.605,119.8985 667.324,151.2145 688.886,168.6555 " fill="none" id="consensus.Engine-backto-beacon.Beacon" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="596.283,102.7585,585.135,84.7385,605.087,91.8735,596.283,102.7585" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="76" x="592.255" y="157.5382">implements</text></g><!--MD5=[4dc4b7e0d581bd3013ebaffb9be4148a]
reverse link rpc.BlockNumberOrHash to clique.blockNumberOrHashOrRLP--><g id="link_rpc.BlockNumberOrHash_clique.blockNumberOrHashOrRLP"><path codeLine="104" d="M2038,97.8915 C2038,120.1945 2038,151.2975 2038,168.6555 " fill="none" id="rpc.BlockNumberOrHash-backto-clique.blockNumberOrHashOrRLP" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="#000000" points="2038,84.7385,2034,90.7385,2038,96.7385,2042,90.7385,2038,84.7385" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="52" x="1976.0875" y="157.5382">extends</text></g><!--MD5=[cdb56a7c8bab107d6b947bf3c543bb79]
reverse link consensus.Engine to clique.Clique--><g id="link_consensus.Engine_clique.Clique"><path codeLine="106" d="M627.839,72.5005 C866.189,75.9625 1749.78,90.5165 1803,116.6885 C1825.51,127.7585 1842.04,153.0415 1850.54,168.6105 " fill="none" id="consensus.Engine-backto-clique.Clique" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="627.652,79.4995,607.755,72.2135,627.853,65.5005,627.652,79.4995" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="76" x="1758.5773" y="157.607">implements</text></g><!--MD5=[44ad7a392b77d2eed9936d7dfc31728a]
reverse link consensus.ChainHeaderReader to consensus.ChainReader--><g id="link_consensus.ChainHeaderReader_consensus.ChainReader"><path codeLine="154" d="M406.809,97.8915 C405.795,120.1945 404.381,151.2975 403.592,168.6555 " fill="none" id="consensus.ChainHeaderReader-backto-consensus.ChainReader" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="#000000" points="407.407,84.7385,403.1382,90.5503,406.8611,96.7261,411.1299,90.9142,407.407,84.7385" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="52" x="341.9052" y="157.5382">extends</text></g><!--MD5=[c852c80991f33a2d6c3466914b95dbc8]
reverse link consensus.Engine to consensus.PoW--><g id="link_consensus.Engine_consensus.PoW"><path codeLine="155" d="M559.588,96.9415 C551.253,119.3035 539.42,151.0495 532.858,168.6555 " fill="none" id="consensus.Engine-backto-consensus.PoW" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="#000000" points="564.136,84.7385,558.2925,88.9638,559.9452,95.9829,565.7888,91.7576,564.136,84.7385" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="52" x="472.7976" y="157.5382">extends</text></g><!--MD5=[0465156c1246617a2ccc409af5087865]
reverse link consensus.Engine to ethash.Ethash--><g id="link_consensus.Engine_ethash.Ethash"><path codeLine="221" d="M573.955,105.1055 C574.385,109.0035 574.75,112.9285 575,116.6885 C578.061,162.8095 576.895,174.5055 575,220.6885 C574.14,241.6525 571.896,265.9185 570.409,280.5205 " fill="none" id="consensus.Engine-backto-ethash.Ethash" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="566.984,105.7875,571.251,85.0315,580.859,103.9185,566.984,105.7875" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="76" x="480.9161" y="269.6218">implements</text></g><!--MD5=[2b1ebc4a3978c66a3e7a8f44eefbec5e]
reverse link consensus.PoW to ethash.Ethash--><g id="link_consensus.PoW_ethash.Ethash"><path codeLine="222" d="M539.971,215.8065 C548.029,237.4255 558.227,264.7855 564.142,280.6555 " fill="none" id="consensus.PoW-backto-ethash.Ethash" style="stroke:#000000;stroke-width:1.0;"/><polygon fill="none" points="533.29,217.9245,532.864,196.7385,546.409,213.0345,533.29,217.9245" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="76" x="576.7774" y="269.5382">implements</text></g><!--MD5=[fae143959a8d0541faad691b55ca6ba8]
reverse link __builtin__.uint to ethash.Mode--><g id="link___builtin__.uint_ethash.Mode"><path codeLine="224" d="M805.1,199.3775 C792.56,206.7165 776.891,215.0575 762,220.6885 C747.075,226.3325 740.476,220.1435 727,228.6885 C706.649,241.5925 691.045,265.5535 682.722,280.5015 " fill="none" id="__builtin__.uint-backto-ethash.Mode" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.5;" width="10" x="804.57" y="191.7265"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="46" x="693.682" y="269.5958">alias of</text></g><!--MD5=[ef326e1085d09cb496b10055f33a8cea]
reverse link clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror to clique.SignerFn--><g id="link_clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror_clique.SignerFn"><path codeLine="225" d="M1387,201.7735 C1387,223.9695 1387,261.0655 1387,280.6555 " fill="none" id="clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror-backto-clique.SignerFn" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.5;" width="10" x="1382" y="191.7385"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="46" x="1332.2313" y="269.5382">alias of</text></g><!--MD5=[430ff29e5207e431444e5790fad11fec]
reverse link clique.commonAddress to clique.signersAscending--><g id="link_clique.commonAddress_clique.signersAscending"><path codeLine="226" d="M1704,201.7735 C1704,223.9695 1704,261.0655 1704,280.6555 " fill="none" id="clique.commonAddress-backto-clique.signersAscending" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.5;" width="10" x="1699" y="191.7385"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="46" x="1649.2313" y="269.5382">alias of</text></g><!--MD5=[d72312e76042646b174a76ad0e2b4c04]
reverse link ethash.<font color=blue>func</font>([]byte, []byte)  to ethash.hasher--><g id="link_ethash.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) _ethash.hasher"><path codeLine="227" d="M411,313.9985 C411,330.3585 411,353.9305 411,368.5045 " fill="none" id="ethash.&lt;font color=blue&gt;func&lt;/font&gt;([]byte, []byte) -backto-ethash.hasher" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.5;" width="10" x="406" y="303.7505"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="46" x="356.5188" y="357.5999">alias of</text></g><!--MD5=[012b812e52577f139cb1dccfce5aa8e2]
@startuml
!theme plain
namespace beacon {
    class Beacon << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + SealHash(header *types.Header) common.Hash
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + APIs(chain consensus.ChainHeaderReader) []rpc.API
        + Close() error
        + IsPoSHeader(header *types.Header) bool
        + InnerEngine() consensus.Engine
        + SetThreads(threads int) 

    }
}

"consensus.Engine" <|- - "implements""beacon.Beacon"

namespace clique {
    class API << (S,Aquamarine) >> {
        + GetSnapshot(number *rpc.BlockNumber) (*Snapshot, error)
        + GetSnapshotAtHash(hash common.Hash) (*Snapshot, error)
        + GetSigners(number *rpc.BlockNumber) ([]common.Address, error)
        + GetSignersAtHash(hash common.Hash) ([]common.Address, error)
        + Proposals() <font color=blue>map</font>[common.Address]bool
        + Propose(address common.Address, auth bool) 
        + Discard(address common.Address) 
        + Status() (*status, error)
        + GetSigner(rlpOrBlockNr *blockNumberOrHashOrRLP) (common.Address, error)

    }
    class Clique << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Authorize(signer common.Address, signFn SignerFn) 
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + SealHash(header *types.Header) common.Hash
        + Close() error
        + APIs(chain consensus.ChainHeaderReader) []rpc.API

    }
    class Snapshot << (S,Aquamarine) >> {
        + Number uint64
        + Hash common.Hash
        + Signers <font color=blue>map</font>[common.Address]<font color=blue>struct</font>{}
        + Recents <font color=blue>map</font>[uint64]common.Address
        + Votes []*Vote
        + Tally <font color=blue>map</font>[common.Address]Tally

    }
    class Tally << (S,Aquamarine) >> {
        + Authorize bool
        + Votes int

    }
    class Vote << (S,Aquamarine) >> {
        + Signer common.Address
        + Block uint64
        + Address common.Address
        + Authorize bool

    }
    class blockNumberOrHashOrRLP << (S,Aquamarine) >> {
        + RLP hexutil.Bytes

        + UnmarshalJSON(data []byte) error

    }
    class clique.SignerFn << (T, #FF7700) >>  {
    }
    class clique.signersAscending << (T, #FF7700) >>  {
    }
    class signersAscending << (S,Aquamarine) >> {
        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class status << (S,Aquamarine) >> {
        + InturnPercent float64
        + SigningStatus <font color=blue>map</font>[common.Address]int
        + NumBlocks uint64

    }
    class "[]common.Address" as commonAddress {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
    class "<font color=blue>func</font>(accounts.Account, string, []byte) ([]byte, error)" as fontcolorbluefuncfontaccountsAccountstringbytebyteerror {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}
"rpc.BlockNumberOrHash" *- - "extends""clique.blockNumberOrHashOrRLP"

"consensus.Engine" <|- - "implements""clique.Clique"

namespace consensus {
    interface ChainHeaderReader  {
        + Config() *params.ChainConfig
        + CurrentHeader() *types.Header
        + GetHeader(hash common.Hash, number uint64) *types.Header
        + GetHeaderByNumber(number uint64) *types.Header
        + GetHeaderByHash(hash common.Hash) *types.Header
        + GetTd(hash common.Hash, number uint64) *big.Int

    }
    interface ChainReader  {
        + GetBlock(hash common.Hash, number uint64) *types.Block

    }
    interface Engine  {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain ChainReader, block *types.Block) error
        + Prepare(chain ChainHeaderReader, header *types.Header) error
        + Finalize(chain ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Seal(chain ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + SealHash(header *types.Header) common.Hash
        + CalcDifficulty(chain ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + APIs(chain ChainHeaderReader) []rpc.API
        + Close() error

    }
    class Merger << (S,Aquamarine) >> {
        + ReachTTD() 
        + FinalizePoS() 
        + TDDReached() bool
        + PoSFinalized() bool

    }
    interface PoW  {
        + Hashrate() float64

    }
    class transitionStatus << (S,Aquamarine) >> {
        + LeftPoW bool
        + EnteredPoS bool

    }
}
"consensus.ChainHeaderReader" *- - "extends""consensus.ChainReader"
"consensus.Engine" *- - "extends""consensus.PoW"


namespace ethash {
    class API << (S,Aquamarine) >> {
        + GetWork() ([]string, error)
        + SubmitWork(nonce types.BlockNonce, hash common.Hash, digest common.Hash) bool
        + SubmitHashrate(rate hexutil.Uint64, id common.Hash) bool
        + GetHashrate() uint64

    }
    class Config << (S,Aquamarine) >> {
        + CacheDir string
        + CachesInMem int
        + CachesOnDisk int
        + CachesLockMmap bool
        + DatasetDir string
        + DatasetsInMem int
        + DatasetsOnDisk int
        + DatasetsLockMmap bool
        + PowMode Mode
        + NotifyFull bool
        + Log log.Logger

    }
    class Ethash << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + SealHash(header *types.Header) common.Hash
        + Close() error
        + StopRemoteSealer() error
        + Threads() int
        + SetThreads(threads int) 
        + Hashrate() float64
        + APIs(chain consensus.ChainHeaderReader) []rpc.API
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error

    }
    class cache << (S,Aquamarine) >> {
    }
    class dataset << (S,Aquamarine) >> {
    }
    class ethash.Mode << (T, #FF7700) >>  {
    }
    class ethash.hasher << (T, #FF7700) >>  {
    }
    class hashrate << (S,Aquamarine) >> {
    }
    class lru << (S,Aquamarine) >> {
    }
    class mineResult << (S,Aquamarine) >> {
    }
    class remoteSealer << (S,Aquamarine) >> {
    }
    class sealTask << (S,Aquamarine) >> {
    }
    class sealWork << (S,Aquamarine) >> {
    }
}

"consensus.Engine" <|- - "implements""ethash.Ethash"
"consensus.PoW" <|- - "implements""ethash.Ethash"

"__builtin__.uint" #.. "alias of""ethash.Mode"
"clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror" #.. "alias of""clique.SignerFn"
"clique.commonAddress" #.. "alias of""clique.signersAscending"
"ethash.<font color=blue>func</font>([]byte, []byte) " #.. "alias of""ethash.hasher"
hide fields
hide methods
@enduml

@startuml







<style>
  root {
    BackgroundColor white
    FontColor black
    FontName Verdana
    HyperLinkColor blue
    LineColor black
    LineThickness 1
    Margin 5
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  header {
    LineThickness 0
  }
  node {
    MaximumWidth 300
  }
  title {
    FontSize 22
    LineThickness 0
  }
</style>

skinparam ArrowLollipopColor black
skinparam BackgroundColor white
skinparam DefaultFontName Verdana
skinparam DefaultMonospacedFontName Courier
skinparam LifelineStrategy nosolid
skinparam ParticipantPadding 10
skinparam SequenceLifeLineBorderColor black
skinparam Shadowing false
skinparam UseBetaStyle true

skinparam Activity {
  BackgroundColor white
  BarColor black
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam Boundary {
  FontColor black
}
skinparam Box {
  Padding 5
}
skinparam CircledCharacter {
  FontColor black
  FontName Courier
  Radius 9
}
skinparam Class {
  BackgroundColor white
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam ClassAttribute {
  FontColor black
  FontName Verdana
}
skinparam ClassStereotype {
  FontColor black
  FontName Verdana
}
skinparam Footer {
  FontColor black
  FontName Verdana
}
skinparam Header {
  FontColor black
  FontName Verdana
}
skinparam Hyperlink {
  Color blue
}
skinparam IconPackage {
  Color black
  BackgroundColor white
}
skinparam IconPrivate {
  Color black
  BackgroundColor white
}
skinparam IconProtected {
  Color black
  BackgroundColor white
}
skinparam IconPublic {
  Color black
  BackgroundColor white
}
skinparam Note {
  FontColor black
  FontName Verdana
}
skinparam Object {
  BorderColor black
}
skinparam Package {
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam State {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeA {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeC {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeE {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeI {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeN {
  BackgroundColor white
  BorderColor black
}
skinparam UseCaseStereoType {
  FontColor black
  FontName Verdana
}
namespace beacon {
    class Beacon << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + SealHash(header *types.Header) common.Hash
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + APIs(chain consensus.ChainHeaderReader) []rpc.API
        + Close() error
        + IsPoSHeader(header *types.Header) bool
        + InnerEngine() consensus.Engine
        + SetThreads(threads int) 

    }
}

"consensus.Engine" <|- - "implements""beacon.Beacon"

namespace clique {
    class API << (S,Aquamarine) >> {
        + GetSnapshot(number *rpc.BlockNumber) (*Snapshot, error)
        + GetSnapshotAtHash(hash common.Hash) (*Snapshot, error)
        + GetSigners(number *rpc.BlockNumber) ([]common.Address, error)
        + GetSignersAtHash(hash common.Hash) ([]common.Address, error)
        + Proposals() <font color=blue>map</font>[common.Address]bool
        + Propose(address common.Address, auth bool) 
        + Discard(address common.Address) 
        + Status() (*status, error)
        + GetSigner(rlpOrBlockNr *blockNumberOrHashOrRLP) (common.Address, error)

    }
    class Clique << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Authorize(signer common.Address, signFn SignerFn) 
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + SealHash(header *types.Header) common.Hash
        + Close() error
        + APIs(chain consensus.ChainHeaderReader) []rpc.API

    }
    class Snapshot << (S,Aquamarine) >> {
        + Number uint64
        + Hash common.Hash
        + Signers <font color=blue>map</font>[common.Address]<font color=blue>struct</font>{}
        + Recents <font color=blue>map</font>[uint64]common.Address
        + Votes []*Vote
        + Tally <font color=blue>map</font>[common.Address]Tally

    }
    class Tally << (S,Aquamarine) >> {
        + Authorize bool
        + Votes int

    }
    class Vote << (S,Aquamarine) >> {
        + Signer common.Address
        + Block uint64
        + Address common.Address
        + Authorize bool

    }
    class blockNumberOrHashOrRLP << (S,Aquamarine) >> {
        + RLP hexutil.Bytes

        + UnmarshalJSON(data []byte) error

    }
    class clique.SignerFn << (T, #FF7700) >>  {
    }
    class clique.signersAscending << (T, #FF7700) >>  {
    }
    class signersAscending << (S,Aquamarine) >> {
        + Len() int
        + Less(i int, j int) bool
        + Swap(i int, j int) 

    }
    class status << (S,Aquamarine) >> {
        + InturnPercent float64
        + SigningStatus <font color=blue>map</font>[common.Address]int
        + NumBlocks uint64

    }
    class "[]common.Address" as commonAddress {
    }
    class "<font color=blue>func</font>(accounts.Account, string, []byte) ([]byte, error)" as fontcolorbluefuncfontaccountsAccountstringbytebyteerror {
    }
}
"rpc.BlockNumberOrHash" *- - "extends""clique.blockNumberOrHashOrRLP"

"consensus.Engine" <|- - "implements""clique.Clique"

namespace consensus {
    interface ChainHeaderReader  {
        + Config() *params.ChainConfig
        + CurrentHeader() *types.Header
        + GetHeader(hash common.Hash, number uint64) *types.Header
        + GetHeaderByNumber(number uint64) *types.Header
        + GetHeaderByHash(hash common.Hash) *types.Header
        + GetTd(hash common.Hash, number uint64) *big.Int

    }
    interface ChainReader  {
        + GetBlock(hash common.Hash, number uint64) *types.Block

    }
    interface Engine  {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain ChainReader, block *types.Block) error
        + Prepare(chain ChainHeaderReader, header *types.Header) error
        + Finalize(chain ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + Seal(chain ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error
        + SealHash(header *types.Header) common.Hash
        + CalcDifficulty(chain ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + APIs(chain ChainHeaderReader) []rpc.API
        + Close() error

    }
    class Merger << (S,Aquamarine) >> {
        + ReachTTD() 
        + FinalizePoS() 
        + TDDReached() bool
        + PoSFinalized() bool

    }
    interface PoW  {
        + Hashrate() float64

    }
    class transitionStatus << (S,Aquamarine) >> {
        + LeftPoW bool
        + EnteredPoS bool

    }
}
"consensus.ChainHeaderReader" *- - "extends""consensus.ChainReader"
"consensus.Engine" *- - "extends""consensus.PoW"


namespace ethash {
    class API << (S,Aquamarine) >> {
        + GetWork() ([]string, error)
        + SubmitWork(nonce types.BlockNonce, hash common.Hash, digest common.Hash) bool
        + SubmitHashrate(rate hexutil.Uint64, id common.Hash) bool
        + GetHashrate() uint64

    }
    class Config << (S,Aquamarine) >> {
        + CacheDir string
        + CachesInMem int
        + CachesOnDisk int
        + CachesLockMmap bool
        + DatasetDir string
        + DatasetsInMem int
        + DatasetsOnDisk int
        + DatasetsLockMmap bool
        + PowMode Mode
        + NotifyFull bool
        + Log log.Logger

    }
    class Ethash << (S,Aquamarine) >> {
        + Author(header *types.Header) (common.Address, error)
        + VerifyHeader(chain consensus.ChainHeaderReader, header *types.Header, seal bool) error
        + VerifyHeaders(chain consensus.ChainHeaderReader, headers []*types.Header, seals []bool) (<font color=blue>chan</font> <font color=blue>struct</font>{}, <font color=blue>chan</font> error)
        + VerifyUncles(chain consensus.ChainReader, block *types.Block) error
        + CalcDifficulty(chain consensus.ChainHeaderReader, time uint64, parent *types.Header) *big.Int
        + Prepare(chain consensus.ChainHeaderReader, header *types.Header) error
        + Finalize(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header) 
        + FinalizeAndAssemble(chain consensus.ChainHeaderReader, header *types.Header, state *state.StateDB, txs []*types.Transaction, uncles []*types.Header, receipts []*types.Receipt) (*types.Block, error)
        + SealHash(header *types.Header) common.Hash
        + Close() error
        + StopRemoteSealer() error
        + Threads() int
        + SetThreads(threads int) 
        + Hashrate() float64
        + APIs(chain consensus.ChainHeaderReader) []rpc.API
        + Seal(chain consensus.ChainHeaderReader, block *types.Block, results <font color=blue>chan</font> *types.Block, stop <font color=blue>chan</font> <font color=blue>struct</font>{}) error

    }
    class cache << (S,Aquamarine) >> {
    }
    class dataset << (S,Aquamarine) >> {
    }
    class ethash.Mode << (T, #FF7700) >>  {
    }
    class ethash.hasher << (T, #FF7700) >>  {
    }
    class hashrate << (S,Aquamarine) >> {
    }
    class lru << (S,Aquamarine) >> {
    }
    class mineResult << (S,Aquamarine) >> {
    }
    class remoteSealer << (S,Aquamarine) >> {
    }
    class sealTask << (S,Aquamarine) >> {
    }
    class sealWork << (S,Aquamarine) >> {
    }
}

"consensus.Engine" <|- - "implements""ethash.Ethash"
"consensus.PoW" <|- - "implements""ethash.Ethash"

"__builtin__.uint" #.. "alias of""ethash.Mode"
"clique.fontcolorbluefuncfontaccountsAccountstringbytebyteerror" #.. "alias of""clique.SignerFn"
"clique.commonAddress" #.. "alias of""clique.signersAscending"
"ethash.<font color=blue>func</font>([]byte, []byte) " #.. "alias of""ethash.hasher"
hide fields
hide methods
@enduml

PlantUML version 1.2022.6beta5(Unknown compile time)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>